<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssshi.ddms.mybatis.dao.GeneralDaoI">

	<select id="login" parameterType="paramBean" resultType="userInfoBean">
		SELECT U.UID, U.USERID, U.FIRSTNAME, U.LASTNAME, U.SHIPINFOUID, PC.DESCRIPTION AS POSCODE 
		FROM USERINFO U 
			LEFT OUTER JOIN (
				SELECT DMI.VAL, DMI.DESCRIPTION FROM DOMAIN DM
					LEFT OUTER JOIN DOMAININFO DMI ON (DM.UID = DMI.DOMAINUID)
				WHERE DM.DOMAIN = 'POSCODE' 
			) PC ON (PC.VAL = U.POSCODE)
		WHERE U.STATUS = 'ACT' AND U.USERID = #{uuid} AND U.PW = PASSWORD(#{pw})
	</select>
	
	<select id="getAuthList" parameterType="int" resultType="string">
		SELECT AI.AUTHCODE 
		FROM AUTHLIST AL
			LEFT OUTER JOIN AUTHINFO AI ON (AL.AUTHINFOUID = AI.UID AND AI.STATUS = 'ACT')
		WHERE AL.STATUS = 'ACT' 
			AND AL.AUTHGROUPUID IN (
				SELECT AU.AUTHGROUPUID FROM AUTHUSER AU WHERE AU.STATUS = 'ACT' AND AU.USERINFOUID = #{userUid}
			)
	</select>
	
	<select id="getAuthKindList" parameterType="int" resultType="string">
		SELECT DISTINCT AG.KIND 
		FROM AUTHGROUP AG
		WHERE AG.UID IN (SELECT AU.AUTHGROUPUID FROM AUTHUSER AU WHERE AU.USERINFOUID = #{userUid})
	</select>
	
	<select id="getSearchAuthGroupUidList" parameterType="paramBean" resultType="int">
		<choose>
			<when test="authKind != null and authKind == 'GROUP'">
				SELECT AL.FROMAUTHGROUPUID 
				FROM APPRLINE AL
				WHERE AL.TOAUTHGROUPUID IN (SELECT AU.AUTHGROUPUID FROM AUTHUSER AU WHERE AU.USERINFOUID = #{userUid})
			</when>
			<otherwise>
				SELECT AUTHGROUPUID FROM AUTHUSER WHERE USERINFOUID = #{userUid}
			</otherwise>
		</choose>
	</select>
	
	<update id="changePw" parameterType="paramBean">
		UPDATE USERINFO SET PW = PASSWORD(#{pw}), UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{userUid}
	</update>
	
	<select id="getProfileFile" parameterType="int" resultType="fileInfoBean">
		SELECT SAVENAME, FILETYPE
		FROM FILEINFO
		WHERE OWNERTB = 'USERINFO' AND OWNERUID = #{uid}
	</select>
	
	<delete id="delProfileFile" parameterType="int">
		DELETE FROM FILEINFO WHERE OWNERTB = 'USERINFO' AND OWNERUID = #{uid}
	</delete>
	
	<insert id="insertProfileFile" parameterType="fileInfoBean">
		INSERT INTO FILEINFO (FILENAME, SAVENAME, FILESIZE, FILETYPE, OWNERTB, OWNERUID, ORD, STATUS, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		VALUES (#{fileName}, #{saveName}, #{fileSize}, #{fileType}, 'USERINFO', #{userUid}, 0, 'ACT', #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<select id="getDomain" parameterType="paramBean" resultType="domainBean">
		SELECT UID, CAT, DOMAIN, DESCRIPTION, DATATYPE 
		FROM DOMAIN 
		WHERE STATUS = 'ACT' AND DOMAIN = #{domain}
	</select>
	
	<select id="getDomainList" parameterType="paramBean" resultType="domainBean">
		SELECT UID, CAT, DOMAIN, DESCRIPTION, DATATYPE 
		FROM DOMAIN 
		WHERE STATUS = 'ACT' 
		<if test="cat != null and cat != 'ALL'">
			AND CAT = #{cat}
		</if>
		ORDER BY DOMAIN
	</select>
	
	<select id="getDomainInfoList" parameterType="int" resultType="domainInfoBean">
		SELECT UID, VAL, INVAL, DESCRIPTION  
		FROM DOMAININFO 
		WHERE DOMAINUID = #{uid} 
		ORDER BY UID
	</select>
	
	<!-- dashboard // -->
	<select id="getDashTrialCnt" resultType="int">
		SELECT COUNT(UID) FROM SCHETRIALINFO WHERE TRIALSTATUS = 'ARRIVE'
		UNION ALL
		SELECT COUNT(UID) FROM SCHEDULERINFO
	</select>
	
	<select id="getDashTrialHour" resultType="int">
		SELECT IFNULL(SUM(S.HR), 0)
		FROM (
			SELECT IFNULL(TIMESTAMPDIFF(HOUR, MIN(CONCAT(SDATE, ' ', STIME)), MAX(CONCAT(EDATE, ' ', ETIME))), 0) AS HR
			FROM SCHEDULERDETAIL
			WHERE SDATE != '0000-00-00' AND EDATE != '0000-00-00' 
				AND SCHEDINFOUID IN (
					SELECT SCHEDULERINFOUID FROM SCHETRIALINFO WHERE TRIALSTATUS = 'ARRIVE'
				)
			GROUP BY SCHEDINFOUID
		) S
		UNION ALL
		SELECT IFNULL(SUM(S.HR), 0)
		FROM (
			SELECT IFNULL(TIMESTAMPDIFF(HOUR, MIN(CONCAT(SDATE, ' ', STIME)), MAX(CONCAT(EDATE, ' ', ETIME))), 0) AS HR
			FROM SCHEDULERDETAIL
			WHERE SDATE != '0000-00-00' AND EDATE != '0000-00-00'
			GROUP BY SCHEDINFOUID
		) S
	</select>
	
	<select id="getDashAtSeaList" resultType="schedulerInfoBean">
		SELECT SI.HULLNUM, SI.DESCRIPTION, SI.SHIPTYPE, 50 AS PER
		FROM SCHETRIALINFO ST
			LEFT OUTER JOIN SCHEDULERINFO SI ON (ST.SCHEDULERINFOUID = SI.UID)
		WHERE ST.TRIALSTATUS = 'ONGO'
	</select>
	
	<select id="getDashQuayList" resultType="scdvmEvntSchBean">
		SELECT SE.PROJ_NO AS PROJNO, SE.ACTV, SE.WK_CNTS AS WKCNTS, SE.DA_STDT AS DASTDT, SE.DA_FNDT AS DAFNDT, 
			SE.SKND, SE.NEW_SKND AS NEWSKND, SQ.QUAY_NM AS QUAYNM 
		FROM SCDVW_EVNT_SCH_DAEJOEN SE
			LEFT OUTER JOIN SCDVW_QUAY_PROJ_DAEJOEN SQ ON (SE.PROJ_NO = SQ.PROJ_NO)
		WHERE SE.ACTV IN ('H00000730000', 'H00000730001', 'H00000780000')
			AND DATE_SUB(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), INTERVAL 7 DAY) <![CDATA[ <= ]]> STR_TO_DATE(SE.DA_STDT, '%Y%m%d')
			AND DATE_ADD(DATE_FORMAT(SYSDATE(), '%Y-%m-%d'), INTERVAL 7 DAY) <![CDATA[ >= ]]> STR_TO_DATE(SE.DA_STDT, '%Y%m%d')
		ORDER BY SE.DA_STDT
	</select>
	
	<select id="getDashEventList" resultType="scdvmEvntSchBean">
		SELECT PROJ_NO AS PROJNO, OWN, NEW_SKND AS NEWSKND, ACTV, IFNULL(RT_STDT, DA_STDT) AS STDT, IFNULL(RT_FNDT, DA_FNDT) AS FNDT,
			TIMESTAMPDIFF(DAY, IFNULL(RT_FNDT, DA_FNDT), SYSDATE()) AS DIFF,
			(
				SELECT S.QUAY_NM FROM SCDVW_QUAY_PROJ_DAEJOEN S 
				WHERE S.PROJ_NO = SE.PROJ_NO 
					AND STR_TO_DATE(S.ST_DTM, '%Y%m%d%H%i') <![CDATA[ <= ]]> SYSDATE() 
					AND STR_TO_DATE(S.FN_DTM, '%Y%m%d%H%i') <![CDATA[ > ]]> SYSDATE()
				LIMIT 1
			) AS QUAYNM
		FROM SCDVW_EVNT_SCH_DAEJOEN SE
		WHERE 
			PROJ_NO IN (
				SELECT S.PROJ_NO FROM SCDVW_QUAY_PROJ_DAEJOEN S
				WHERE DATE_FORMAT(DATE_SUB(STR_TO_DATE(S.ST_DTM, '%Y%m%d%H%i'), INTERVAL 14 DAY), '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(SYSDATE(), '%Y-%m-%d') 
					AND DATE_FORMAT(STR_TO_DATE(S.FN_DTM, '%Y%m%d%H%i'), '%Y-%m-%d') <![CDATA[ >= ]]> DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
			)
			AND ACTV IN (
				'H00000050000', 'H00000510000', 'H00000531000', 'H00000540000', 'H00000710000', 'H00000712000', 
				'H00000730000', 'H00000730001', 'H00000750000', 'H00000223000', 'H00000780000', 'H00000070000'
			)
		ORDER BY PROJNO, FNDT
	</select>
	
	<!-- // dashboard -->
</mapper>