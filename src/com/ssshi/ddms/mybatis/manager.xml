<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssshi.ddms.mybatis.dao.ManagerDaoI">
	<select id="getSchedulerList" parameterType="schedulerInfoBean" resultType="schedulerInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			S.UID
			, S.HULLNUM
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = S.SHIPTYPE) AS SHIPTYPE
			, S.DESCRIPTION
			, S.DEPARTMENT
			, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
			, DATE_FORMAT(S.SDATE, '%Y-%m-%d') as SDATE
			, DATE_FORMAT(S.EDATE, '%Y-%m-%d') AS EDATE
			, S.STATUS
			, S.ISOFF
			, S.SCHEDULERVERSIONINFOUID
			, S.SCHEDTYPE
			, S.REVNUM
			, S.TRIALKEY
			, DATE_FORMAT(S.INSERTDATE, '%Y-%m-%d %H:%i:%S') AS INSERTDATE
			, TI.TRIALSTATUS, SI.REGOWNER
			, CONCAT(UI.FIRSTNAME, ' ', UI.LASTNAME) AS INSERTNAME
			, SI.PROJSEQ
		FROM SCHEDULERINFO S
		INNER JOIN SCHEDULERVERSIONINFO SVI ON (S.SCHEDULERVERSIONINFOUID = SVI.UID AND S.REVNUM = SVI.PLANREVNUM)
		LEFT OUTER JOIN SCHETRIALINFO TI ON (S.UID = TI.SCHEDULERINFOUID)
		LEFT OUTER JOIN SHIPINFO SI ON (S.HULLNUM = SI.SHIPNUM)
		LEFT OUTER JOIN USERINFO UI ON (S.INSERTBY = UI.UID)
		<where>
			<if test="shiptype != null and shiptype != 'ALL'">
				AND S.SHIPTYPE = #{shiptype}
			</if>
			<if test="hullnum != null and hullnum.length() > 0">
				AND LOWER(S.HULLNUM) LIKE CONCAT('%', LOWER(#{hullnum}), '%')
			</if>
			<if test="ownerName != null and ownerName.length() > 0">
				AND S.OWNER IN (SELECT U.UID FROM USERINFO U WHERE LOWER(U.FIRSTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') OR LOWER(U.LASTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') ) 
			</if>
			<if test="revnum != null and revnum.length() > 0">
				AND S.REVNUM = #{revnum}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY S.SHIPTYPE 
			</when>
			<when test="sort != null and sort == 'hullnum'">
				ORDER BY S.HULLNUM 
			</when>
			<when test="sort != null and sort == 'desc'">
				ORDER BY S.DESCRIPTION
			</when>
			<when test="sort != null and sort == 'ownerName'">
				ORDER BY S.OWNER 
			</when>
			<when test="sort != null and sort == 'department'">
				ORDER BY S.DEPARTMENT
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE 
			</when>
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE 
			</when>
			<when test="sort != null and sort == 'trialStatus'">
				ORDER BY TI.TRIALSTATUS
			</when>
			<when test="sort != null and sort == 'status'">
				ORDER BY S.STATUS
			</when>
			<when test="sort != null and sort == 'regOwner'">
				ORDER BY SI.REGOWNER
			</when>
			<when test="sort != null and sort == 'insertName'">
				ORDER BY CONCAT(UI.FIRSTNAME, ' ', UI.LASTNAME)
			</when>
			<when test="sort != null and sort == 'schedType'">
				ORDER BY S.SCHEDTYPE
			</when>
			<when test="sort != null and sort == 'series'">
				ORDER BY SI.MAINHULLNUM, SI.SEQNO 
			</when>
			<otherwise>
				ORDER BY S.INSERTDATE 
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC 
			</when>
			<otherwise>
				ASC 
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getSchedulerListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getScheduler" parameterType="paramBean" resultType="schedulerInfoBean">
		SELECT 
			UID, HULLNUM, SHIPTYPE, DESCRIPTION, DEPARTMENT
			, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
			, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE, DATE_FORMAT(EDATE, '%Y-%m-%d') AS EDATE
			, (DATEDIFF(EDATE, SDATE) + 1)  AS PERIOD, STATUS, REVNUM, SCHEDULERVERSIONINFOUID
			, SCHEDTYPE, SCHECREWSDATE, SCHECREWPERIOD, TRIALKEY, ISOFF
		FROM SCHEDULERINFO S
		WHERE S.UID = #{uid}
	</select>
	
	<select id="getSchedulerRowDataList" parameterType="scheDetailInfoBean" resultType="scheDetailInfoBean">
		SELECT
			UID, SCHEDINFOUID, CATEGORY , TCNUM , DESCRIPTION , CTYPE , LOADRATE , DTYPE, SEQ, PER, READYTIME, NOTE, CODEDETUID, SAMETCNUM
			, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE, DATE_FORMAT(STIME , '%H:%i') as STIME
			, DATE_FORMAT(EDATE, '%Y-%m-%d') as EDATE, DATE_FORMAT(ETIME , '%H:%i') as ETIME
			, DATE_FORMAT(PERFORMANCESDATE, '%Y-%m-%d') as PERFORMANCESDATE, DATE_FORMAT(PERFORMANCESTIME , '%H:%i') as PERFORMANCESTIME
			, DATE_FORMAT(PERFORMANCEEDATE, '%Y-%m-%d') as PERFORMANCEEDATE, DATE_FORMAT(PERFORMANCEETIME , '%H:%i') as PERFORMANCEETIME
			, 'R' as FLAG
			, CODEDETTCNUM
			, CODEDETDESC
		FROM SCHEDULERDETAIL S
		WHERE SCHEDINFOUID = #{uid}
		<if test="tcnum != null and tcnum.length() > 0">
			AND LOWER(S.TCNUM) LIKE CONCAT('%', LOWER(#{tcnum}), '%')
		</if>
		<if test="description != null and description.length() > 0">
			AND LOWER(S.DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
		</if>
		<if test="ctype != null and ctype != 'ALL'">
			AND S.CTYPE = #{ctype}
		</if>
		<if test="dtype != null and dtype != 'ALL'">
			AND S.DTYPE = #{dtype}
		</if>
		<if test="sdate != null and sdate.length() > 0">
			AND DATE_FORMAT(S.SDATE, '%Y-%m-%d') <![CDATA[ = ]]> #{sdate}
		</if>
		<if test="edate != null and edate.length() > 0">
			AND DATE_FORMAT(S.EDATE, '%Y-%m-%d') <![CDATA[ = ]]> #{edate}
		</if>
		<choose>
			<when test="sort != null and sort == 'category'">
				ORDER BY S.CATEGORY 
			</when>
			<when test="sort != null and sort == 'tcnum'">
				ORDER BY S.TCNUM 
			</when>
			<when test="sort != null and sort == 'desc'">
				ORDER BY S.DESCRIPTION 
			</when>
			
			<when test="sort != null and sort == 'ctype'">
				ORDER BY S.CTYPE 
			</when>
			<when test="sort != null and sort == 'loadrate'">
				ORDER BY S.LOADRATE 
			</when>
			<when test="sort != null and sort == 'dtype'">
				ORDER BY S.DTYPE 
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE 
			</when>
			<when test="sort != null and sort == 'stime'">
				ORDER BY S.STIME 
			</when>
			
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE 
			</when>
			<when test="sort != null and sort == 'etime'">
				ORDER BY S.ETIME 
			</when>
			<when test="sort != null and sort == 'seq'">
				ORDER BY S.SEQ 
			</when>
			<when test="sort != null and sort == 'per'">
				ORDER BY S.PER 
			</when>
			<when test="search2 != null and search2 == 'chart'">
				ORDER BY S.SEQ
			</when>
			<otherwise>
				ORDER BY S.SEQ 
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC 
			</when>
			<otherwise>
				ASC 
			</otherwise>
		</choose>
	</select>
	
	<update id="updateScheduler" parameterType="schedulerInfoBean">
		UPDATE SCHEDULERINFO
			SET SDATE = STR_TO_DATE(#{sdate},'%Y-%m-%d')
				, EDATE = STR_TO_DATE(#{edate},'%Y-%m-%d')
				, DESCRIPTION = #{description}
				, INSERTBY = #{userUid}
				, INSERTDATE =SYSDATE()
				, UPDATEBY = #{userUid}
				, UPDATEDATE =SYSDATE()
				, SCHEDTYPE = #{schedtype}
		WHERE UID = #{uid}
	</update>

	<insert id="insertSchedulerDetail" parameterType="scheDetailInfoBean">
		INSERT INTO SCHEDULERDETAIL (SCHEDINFOUID,CATEGORY,TCNUM,DESCRIPTION,CTYPE,LOADRATE,DTYPE,READYTIME,SDATE,STIME,EDATE,ETIME,SEQ,PER,CODEDETUID,SAMETCNUM,INSERTBY,INSERTDATE,UPDATEBY,UPDATEDATE
		<if test="codedettcnum != null and codedettcnum.length() > 0">
			, CODEDETTCNUM
		</if>
		<if test="codedetdesc != null and codedetdesc.length() > 0">
			, CODEDETDESC
		</if>
		)
		VALUES (
		${schedinfouid},
		#{category},
		#{tcnum},
		#{description},
		#{ctype},
		#{loadrate},
		#{dtype},
		#{readytime},
		STR_TO_DATE(#{sdate},'%Y-%m-%d'), STR_TO_DATE(#{stime},'%H:%i'),
		STR_TO_DATE(#{edate},'%Y-%m-%d'), STR_TO_DATE(#{etime},'%H:%i'),
		#{seq},
		#{per},
		#{codedetuid},
		#{sametcnum},
		#{userUid},
		SYSDATE(),
		#{userUid},
		SYSDATE()
		<if test="codedettcnum != null and codedettcnum.length() > 0">
			, #{codedettcnum}
		</if>
		<if test="codedetdesc != null and codedetdesc.length() > 0">
			, #{codedetdesc}
		</if>
		)
	</insert>

	<update id="updateSchedulerDetail" parameterType="scheDetailInfoBean">
		UPDATE SCHEDULERDETAIL
			SET CATEGORY = #{category}
			, TCNUM = #{tcnum}
			, DESCRIPTION = #{description}
			, LOADRATE = #{loadrate}
			, DTYPE = #{dtype}
			, CTYPE = #{ctype}
			, SDATE = STR_TO_DATE(#{sdate},'%Y-%m-%d')
			, STIME = STR_TO_DATE(#{stime},'%H:%i')
			, EDATE = STR_TO_DATE(#{edate},'%Y-%m-%d')
			, ETIME = STR_TO_DATE(#{etime},'%H:%i')
			, SEQ = #{seq}
			, PER = #{per}
			, READYTIME = #{readytime}
			, CODEDETUID = #{codedetuid}
			, SAMETCNUM = #{sametcnum}
			, INSERTBY = #{userUid}
			, INSERTDATE = SYSDATE()
			, UPDATEBY = #{userUid}
			, UPDATEDATE = SYSDATE()
			<choose>
				<when test="performancesdate != null and performancesdate.length() > 0">, PERFORMANCESDATE = STR_TO_DATE(#{performancesdate},'%Y-%m-%d')</when>
				<otherwise>, PERFORMANCESDATE = NULL</otherwise>
			</choose>
			<choose>
				<when test="performancestime != null and performancestime.length() > 0">, PERFORMANCESTIME = STR_TO_DATE(#{performancestime},'%H:%i')</when>
				<otherwise>, PERFORMANCESTIME = NULL</otherwise>
			</choose>
			<choose>
				<when test="performanceedate != null and performanceedate.length() > 0">, PERFORMANCEEDATE = STR_TO_DATE(#{performanceedate},'%Y-%m-%d')</when>
				<otherwise>, PERFORMANCEEDATE = NULL</otherwise>
			</choose>
			<choose>
				<when test="performanceetime != null and performanceetime.length() > 0">, PERFORMANCEETIME = STR_TO_DATE(#{performanceetime},'%H:%i')</when>
				<otherwise>, PERFORMANCEETIME = NULL</otherwise>
			</choose>
			<choose>
				<when test="codedettcnum != null and codedettcnum.length() > 0">
					, CODEDETTCNUM = #{codedettcnum}
				</when>
				<otherwise>
					, CODEDETTCNUM = ''
				</otherwise>
			</choose>
			<choose>
				<when test="codedetdesc != null and codedetdesc.length() > 0">
					, CODEDETDESC = #{codedetdesc}
				</when>
				<otherwise>
					, CODEDETDESC = ''
				</otherwise>
			</choose>
			WHERE UID = #{uid}
	</update>

	<delete id="deleteSchedulerDetail" parameterType="int">
		DELETE FROM SCHEDULERDETAIL WHERE UID = #{uid}
	</delete>
	
	<select id="getScheduleTcNumSearchList" parameterType="scheCodeDetailBean" resultType="scheCodeDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, SCHECODEINFOUID , LV1CODE , LV2CODE , LV3CODE, LV4CODE , DISPLAYCODE , DESCRIPTION , DTYPE, CTYPE, 
			LOADRATE, LOADSTR, PER , READYTIME, SEQ, SAMETCNUM
		FROM (
			SELECT 
				UID, SCHECODEINFOUID , LV1CODE , LV2CODE , LV3CODE, LV4CODE , DISPLAYCODE , DESCRIPTION , DTYPE, CTYPE, 
				IF(LV2CODE REGEXP '^[0-9]+$', CAST(LV2CODE AS UNSIGNED), ASCII(LV2CODE)) AS LV2,
				IF(LV3CODE REGEXP '^[0-9]+$', CAST(LV3CODE AS UNSIGNED), ASCII(LV3CODE)) AS LV3,
				IF(LV4CODE REGEXP '^[0-9]+$', CAST(LV4CODE AS UNSIGNED), ASCII(LV4CODE)) AS LV4,
				LOADRATE, LOADSTR, PER , READYTIME, SEQ, SAMETCNUM, IF(@PREV <![CDATA[ <> ]]> VL, @RN:=0,@RN), @PREV:=VL, @RN:=@RN+1 AS RN
			FROM (
				SELECT
					UID, SCHECODEINFOUID , LV1CODE , LV2CODE , LV3CODE, LV4CODE , DISPLAYCODE , DESCRIPTION , DTYPE, CTYPE, 
					LOADRATE, LOADSTR, IFNULL(PER, '') AS PER , IFNULL(READYTIME, '') AS READYTIME, SEQ, SAMETCNUM, 
					CONCAT(DISPLAYCODE, IFNULL(DTYPE, ''), IFNULL(CTYPE, ''), '-', IFNULL(LOADRATE, ''), IFNULL(LOADSTR, ''), '-', IFNULL(PER, ''), '-', IFNULL(READYTIME, '')) AS VL
				FROM SCHEDULECODEDETAIL
				WHERE 
					SCHECODEINFOUID IN (
						SELECT UID 
						FROM SCHEDULECODEINFO
						WHERE SHIPTYPE = #{shiptype}
						  	AND SCHEDTYPE = #{schedtype}
							<if test="status != null and status.length() > 0">
								AND STATUS = #{status}
						    </if>
					)
					<if test="displaycode != null and displaycode.length() > 0">
					  	AND LOWER(DISPLAYCODE) LIKE CONCAT('%', LOWER(#{displaycode}), '%')
					</if>
					<if test="description != null and description.length() > 0">
					  	AND LOWER(DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
					</if>
			) S, (SELECT @RN:=0) RN, (SELECT @PREV:='') PREV
			ORDER BY VL
		) S2
		WHERE RN = 1
		ORDER BY LV1CODE, LV2, LV3, LV4
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getScheduleTcNumSearchListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getShipType" resultType="domainInfoBean">
		SELECT UID, VAL, INVAL, DESCRIPTION  
		FROM DOMAININFO 
		WHERE DOMAINUID IN (
			SELECT UID FROM DOMAIN
			WHERE DOMAIN = 'SHIPTYPE'
		) 
		ORDER BY UID
	</select>
	
	<select id="getLastKeyNo" parameterType="schedulerInfoBean" resultType="int">
		SELECT IFNULL(MAX(KEYNO), 0) FROM SCHEDULERINFO
		WHERE HULLNUM = #{hullnum} AND SCHEDTYPE = #{schedtype}
	</select>
	
	<insert id="insertScheduler" parameterType="schedulerInfoBean">
		INSERT INTO SCHEDULERINFO (HULLNUM, SHIPTYPE, DESCRIPTION, OWNER, DEPARTMENT, SDATE, EDATE, STATUS, 
			INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE, SCHEDTYPE, SCHEDULERVERSIONINFOUID, REVNUM, TRIALKEY, KEYNO)
		VALUES (#{hullnum}, #{shiptype}, #{description}, #{userUid}, #{department}, STR_TO_DATE(#{sdate},'%Y-%m-%d'), STR_TO_DATE(#{edate},'%Y-%m-%d'), #{status}, 
			#{userUid}, SYSDATE(), #{userUid}, SYSDATE(), #{schedtype}, #{schedulerVersionInfoUid}, #{revnum}, #{trialKey}, #{keyNo})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<delete id="deleteScheduler" parameterType="int">
		DELETE FROM SCHEDULERINFO WHERE UID = #{uid}
	</delete>
	
	<delete id="deleteSchedulerDetailForList" parameterType="int">
		DELETE FROM SCHEDULERDETAIL WHERE SCHEDINFOUID = #{uid}
	</delete>
	
	<update id="changeStatusScheduler" parameterType="paramBean">
		UPDATE SCHEDULERINFO SET STATUS = #{status}, UPDATEBY = ${userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	
	<select id="getScheduleHierarchyList" parameterType="scheHierarchyBean" resultType="scheHierarchyBean">
		SELECT UID , CODE , DISPLAYCODE , DESCRIPTION, CODELEVEL , PARENTUID 
		FROM SCHEDULEHIERARCHY
		WHERE 1=1
		<if test="uid != null and uid > 0">
			AND UID = #{uid}
		</if>
		<if test="code != null and code.length() > 0">
			AND CODE = #{code}
		</if>
		<if test="displaycode != null and displaycode.length() > 0">
			AND DISPLAYCODE = #{displaycode}
		</if>
		<if test="codelevel != null and codelevel > 0">
			AND CODELEVEL = #{codelevel}
		</if>
		<if test="parentuid != null and parentuid > 0">
			AND PARENTUID = #{parentuid}
		</if>
		<if test="description != null and description.length() > 0">
			AND DESCRIPTION = #{description}
		</if>
		ORDER BY CODELEVEL, PARENTUID, (IF(CODELEVEL BETWEEN 2 AND 3 AND LENGTH(DISPLAYCODE) BETWEEN 3 AND 4 AND (DISPLAYCODE LIKE 'A%' OR DISPLAYCODE LIKE 'B%' OR DISPLAYCODE LIKE 'C%' OR DISPLAYCODE LIKE 'G%'), CAST(IFNULL(SUBSTRING(DISPLAYCODE , 3), 100) AS SIGNED), 100)), DISPLAYCODE, CODE, DESCRIPTION
	</select>
	<select id="getScheduleHierarchyListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getScheduleHierarchyParentList" parameterType="scheHierarchyBean" resultType="scheHierarchyBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID , CODE , DISPLAYCODE , DESCRIPTION, CODELEVEL , PARENTUID 
			, (SELECT CODE FROM SCHEDULEHIERARCHY P WHERE P.UID = S.PARENTUID) AS PARENTCODE
		FROM SCHEDULEHIERARCHY S
		WHERE 1=1
		<if test="uid != null and uid > 0">
			AND S.UID = #{uid}
		</if>
		<if test="code != null and code.length() > 0">
			AND LOWER(S.CODE) LIKE CONCAT('%', LOWER(#{code}), '%')
		</if>
		<if test="displaycode != null and displaycode.length() > 0">
			AND LOWER(S.DISPLAYCODE) LIKE CONCAT('%', LOWER(#{displaycode}), '%')
		</if>
		<if test="codelevel != null and codelevel > 0">
			AND S.CODELEVEL = #{codelevel}
		</if>
		<if test="parentuid != null and parentuid > 0">
			AND S.PARENTUID = #{parentuid}
		</if>
		<if test="description != null and description.length() > 0">
			AND LOWER(S.DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
		</if>
		ORDER BY S.CODELEVEL, S.PARENTUID, S.DISPLAYCODE, S.CODE, S.DESCRIPTION
		LIMIT #{start}, #{limit}
	</select>
	<select id="getScheduleHierarchyParentListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<insert id="insertScheduleHirerarchy" parameterType="scheHierarchyBean">
		INSERT INTO SCHEDULEHIERARCHY (CODE, DISPLAYCODE, DESCRIPTION, CODELEVEL, PARENTUID, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		VALUES (#{code}, #{displaycode}, #{description}, #{codelevel}, #{parentuid}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
	</insert>
	
	<update id="updateScheduleHirerarchy" parameterType="scheHierarchyBean">
		UPDATE SCHEDULEHIERARCHY
			SET CODE = #{code}
				, DISPLAYCODE = #{displaycode}
				, DESCRIPTION = #{description}
				, CODELEVEL = #{codelevel}
				, PARENTUID = #{parentuid}
				, UPDATEBY = #{userUid}
				, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<delete id="deleteScheduleHirerarchy" parameterType="int">
		DELETE FROM SCHEDULEHIERARCHY WHERE UID = #{uid}
	</delete>
	
	<select id="getScheduleCodeInfoList" parameterType="scheCodeInfoBean" resultType="scheCodeInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE) AS SHIPTYPE
			, DESCRIPTION
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SCHEDTYPE') AND D.VAL = SCHEDTYPE) AS SCHEDTYPE
			, STATUS, REVNUM
		FROM SCHEDULECODEINFO
		<where>
			<if test="shiptype != null and shiptype != 'ALL'">
				AND SHIPTYPE = #{shiptype}
			</if>
			<if test="description != null and description.length() > 0">
				AND LOWER(DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
			</if>
			<if test="schedtype != null and schedtype != 'ALL'">
				AND SCHEDTYPE = #{schedtype}
			</if>
			<if test="status != null and status != 'ALL'">
				AND STATUS = #{status}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY SHIPTYPE 
			</when>
			<when test="sort != null and sort == 'description'">
				ORDER BY DESCRIPTION
			</when>
			<when test="sort != null and sort == 'schedtype'">
				ORDER BY SCHEDTYPE
			</when>
			<when test="sort != null and sort == 'status'">
				ORDER BY STATUS
			</when>
			<otherwise>
				ORDER BY SHIPTYPE 
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC 
			</when>
			<otherwise>
				ASC 
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getScheduleCodeInfoListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getScheduleCodeInfo" parameterType="paramBean" resultType="scheCodeInfoBean">
		SELECT 
			UID, SHIPTYPE, DESCRIPTION, STATUS, REVNUM, SCHEDTYPE
		FROM SCHEDULECODEINFO
		WHERE UID = #{uid}
	</select>
	
	
	<select id="getScheduleCodeDetList" parameterType="paramBean" resultType="scheCodeDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, SCHECODEINFOUID , DISPLAYCODE , DESCRIPTION , CODELEVEL
			, DTYPE, CTYPE 
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'DTYPE') AND D.VAL = DTYPE) AS DTYPEDESC
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'CTYPE') AND D.VAL = CTYPE) AS CTYPEDESC
			, LOADSTR, LOADRATE, PER , READYTIME, LV1CODE
			, LV2CODE, LV3CODE, LV4CODE , SCHEHIERARCHYUID, SEQ
			, SAMETCNUM, 'R' as FLAG
		FROM SCHEDULECODEDETAIL
		WHERE SCHECODEINFOUID = #{uid}
		<choose>
			<when test="sort != null and sort == 'codelevel'">
				ORDER BY CODELEVEL 
			</when>
			<when test="sort != null and sort == 'displaycode'">
				ORDER BY DISPLAYCODE 
			</when>
			<when test="sort != null and sort == 'description'">
				ORDER BY DESCRIPTION
			</when>
			<when test="sort != null and sort == 'dtype'">
				ORDER BY DTYPE
			</when>
			<when test="sort != null and sort == 'ctype'">
				ORDER BY CTYPE
			</when>
			<when test="sort != null and sort == 'loadstr'">
				ORDER BY LOADSTR
			</when>
			<when test="sort != null and sort == 'loadrate'">
				ORDER BY LOADRATE
			</when>
			<when test="sort != null and sort == 'per'">
				ORDER BY PER
			</when>
			<when test="sort != null and sort == 'readytime'">
				ORDER BY READYTIME
			</when>
			<otherwise>
				ORDER BY SEQ
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC 
			</when>
			<otherwise>
				ASC 
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getScheduleCodeDetListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<update id="updateScheduleCode" parameterType="scheCodeInfoBean">
		UPDATE SCHEDULECODEINFO
			SET DESCRIPTION = #{description}
				, STATUS = #{status}
				, REVNUM = #{revnum}
		WHERE UID = #{uid}
	</update>
	
	<insert id="insertScheduleCodeDetail" parameterType="scheCodeDetailBean">
		INSERT INTO SCHEDULECODEDETAIL (SCHECODEINFOUID, LV1CODE, LV2CODE, LV3CODE, LV4CODE, DISPLAYCODE, DESCRIPTION, CODELEVEL, CTYPE, DTYPE, LOADRATE, LOADSTR, PER, READYTIME, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE, SCHEHIERARCHYUID, SEQ, SAMETCNUM)
		VALUES (#{schecodeinfouid}, #{lv1code}, #{lv2code}, #{lv3code}, #{lv4code}, #{displaycode}, #{description}, #{codelevel}, #{ctype}, #{dtype}, #{loadrate}, #{loadstr}, #{per}, #{readytime}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE(), #{schehierarchyuid}, #{seq}, #{sametcnum})
	</insert>
	
	<update id="updateScheduleCodeDetail" parameterType="scheCodeDetailBean">
		UPDATE SCHEDULECODEDETAIL
			SET LV1CODE = #{lv1code}
				, LV2CODE = #{lv2code}
				, LV3CODE = #{lv3code}
				, LV4CODE = #{lv4code}
				, DISPLAYCODE = #{displaycode}
				, DESCRIPTION = #{description}
				, CODELEVEL = #{codelevel}
				, CTYPE = #{ctype}
				, DTYPE = #{dtype}
				, LOADRATE = #{loadrate}
				, LOADSTR = #{loadstr}
				, PER = #{per}
				, READYTIME = #{readytime}
				, SCHEHIERARCHYUID = #{schehierarchyuid}
				, SEQ = #{seq}
				, SAMETCNUM = #{sametcnum}
				, UPDATEBY = #{userUid}
				, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<delete id="deleteScheduleCodeDetail" parameterType="int">
		DELETE FROM SCHEDULECODEDETAIL WHERE UID = #{uid}
	</delete>
	
	<update id="changeStatusScheduleCode" parameterType="paramBean">
		UPDATE SCHEDULECODEINFO SET STATUS = #{status}, UPDATEBY = ${userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<delete id="deleteScheduleCode" parameterType="int">
		DELETE FROM SCHEDULECODEINFO WHERE UID = #{uid}
	</delete>
	
	<delete id="deleteScheduleCodeDetailForList" parameterType="int">
		DELETE FROM SCHEDULECODEDETAIL WHERE SCHECODEINFOUID = #{uid}
	</delete>
	
	<select id="selectSameActShiptypeScheduleCode" parameterType="scheCodeInfoBean" resultType="scheCodeInfoBean">
		SELECT UID FROM SCHEDULECODEINFO WHERE SHIPTYPE = #{shiptype} AND STATUS = 'ACT' AND SCHEDTYPE = #{schedtype}
	</select>
	
	<insert id="insertScheduleCode" parameterType="scheCodeInfoBean">
		INSERT INTO SCHEDULECODEINFO (SHIPTYPE, DESCRIPTION, STATUS, REVNUM, SCHEDTYPE, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		VALUES (#{shiptype}, #{description},  #{status}, #{revnum}, #{schedtype}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>

	<select id="getStandardReqInfoList" resultType="stndReqInfoBean">
		SELECT UID, SEQ, REQINFOTITLE, ITEM, UNIT
			FROM STDREQINFO
		ORDER BY SEQ
	</select>

	<delete id="deleteStandardReqInfo" parameterType="int">
		DELETE FROM STDREQINFO
		WHERE UID = #{uid}
	</delete>

	<insert id="insertStandardReqInfo" parameterType="stndReqInfoBean">
		INSERT INTO STDREQINFO (SEQ, REQINFOTITLE, ITEM, UNIT, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		values (#{seq}, #{reqinfotitle}, #{item}, #{unit}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateStandardReqInfo" parameterType="stndReqInfoBean">
		UPDATE STDREQINFO SET SEQ = #{seq}
		                    , REQINFOTITLE = #{reqinfotitle}
		                    , ITEM = #{item}
		                    , UNIT = #{unit}
							, UPDATEBY = #{userUid}
		                    , UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<select id="getVesselReqInfoList" parameterType="vsslReqInfoBean" resultType="vsslReqInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			V.UID
			, V.HULLNUM
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = V.SHIPTYPE) AS SHIPTYPE
			, V.DESCRIPTION
			, V.STATUS
			, V.INSERTBY
			, CONCAT(UI.FIRSTNAME, ' ', UI.LASTNAME) AS INSERTBYNM
		FROM VSSLREQINFO V
		LEFT OUTER JOIN USERINFO UI ON (V.INSERTBY = UI.UID)
		<where>
			<if test="shiptype != null and shiptype != 'ALL'">
				AND V.SHIPTYPE = #{shiptype}
			</if>
			<if test="hullNum != null and hullNum.length() > 0">
				AND LOWER(V.HULLNUM) LIKE CONCAT('%', LOWER(#{hullNum}), '%')
			</if>
			<if test="status != null and status != 'ALL'">
				AND V.STATUS = #{status}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY V.SHIPTYPE
			</when>
			<when test="sort != null and sort == 'description'">
				ORDER BY V.HULLNUM
			</when>
			<when test="sort != null and sort == 'status'">
				ORDER BY V.STATUS
			</when>
			<otherwise>
				ORDER BY V.INSERTDATE
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getVesselReqInfoListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>

	<update id="changeStatusVesselReqInfo" parameterType="paramBean">
		UPDATE VSSLREQINFO SET STATUS = #{status}, UPDATEBY = ${userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<delete id="deleteVesselReqInfo" parameterType="int">
		DELETE FROM VSSLREQINFO WHERE uid = #{uid}
	</delete>

	<delete id="deleteVesselReqInfoDetailByVsslReqInfoUid" parameterType="int">
		DELETE FROM VSSLREQINFODETAIL WHERE VSSLREQINFOUID = #{vsslreqinfouid}
	</delete>

	<update id="updateVesselReqInfo" parameterType="vsslReqInfoBean">
		UPDATE VSSLREQINFO SET STATUS = #{status}, UPDATEBY = ${userUid}, UPDATEDATE = SYSDATE()
			, DESCRIPTION = #{description}
		    , REGISTERDOWNER = #{registerdowner}
			, DRAWN = #{drawn}
			, CHECKED = #{checked}
			, MANAGER = #{manager}
			, GROSSTONNAGE = #{grosstonnage}
			<if test="hullNum != null and hullNum.length() > 0">
				, HULLNUM = #{hullNum}
			</if>
			<if test="shiptype != null and shiptype.length() > 0">
				, SHIPTYPE = #{shiptype}
			</if>
		WHERE UID = #{uid}
	</update>

	<insert id="insertVesselReqInfo" parameterType="vsslReqInfoBean">
		INSERT INTO VSSLREQINFO (HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER, SCHEDINFOUID, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		values (#{hullNum}, #{shiptype}, #{description}, #{status}, #{registerdowner}, #{grosstonnage}, #{drawn}, #{checked}, #{manager}, #{schedinfouid}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="getVesselReqInfo" parameterType="paramBean" resultType="vsslReqInfoBean">
		SELECT
			UID, HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER
		FROM VSSLREQINFO
		WHERE UID = #{uid}
	</select>

	<select id="getVesselReqInfoByTempUid" parameterType="paramBean" resultType="vsslReqInfoBean">
		SELECT
			UID, HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER
		FROM VSSLREQINFO
		WHERE SCHEDINFOUID = #{tempUid}
	</select>

	<select id="getVesselReqInfoDetList" parameterType="paramBean" resultType="vsslReqInfoDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
		UID, VSSLREQINFOUID, SEQ, REQINFOTITLE, ITEM
		, UNIT, NAME, RPM, LOADRATE, 'R' as FLAG
		FROM VSSLREQINFODETAIL
		WHERE VSSLREQINFOUID = #{uid}
		<choose>
			<when test="sort != null and sort == 'seq'">
				ORDER BY SEQ
			</when>
			<when test="sort != null and sort == 'reqinfotitle'">
				ORDER BY REQINFOTITLE
			</when>
			<when test="sort != null and sort == 'item'">
				ORDER BY ITEM
			</when>
			<when test="sort != null and sort == 'unit'">
				ORDER BY UNIT
			</when>
			<when test="sort != null and sort == 'name'">
				ORDER BY NAME
			</when>
			<when test="sort != null and sort == 'rpm'">
				ORDER BY RPM
			</when>
			<when test="sort != null and sort == 'loadrate'">
				ORDER BY LOADRATE
			</when>
			<otherwise>
				ORDER BY SEQ
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getVesselReqInfoDetListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>

	<select id="getVesselReqInfoByHullNum" parameterType="paramBean" resultType="vsslReqInfoBean">
		SELECT
			UID, HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER
		FROM VSSLREQINFO
		WHERE HULLNUM = (
			SELECT HULLNUM FROM SCHEDULERINFO
			WHERE UID = #{uid}
			)
		AND STATUS = 'ACT'
	</select>

	<select id="getVesselReqInfoDetListByHullNum" parameterType="paramBean" resultType="vsslReqInfoDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
		UID, VSSLREQINFOUID, SEQ, REQINFOTITLE, ITEM
		, UNIT, NAME, RPM, LOADRATE, 'R' as FLAG
		FROM VSSLREQINFODETAIL
		WHERE VSSLREQINFOUID = (
			SELECT UID FROM vsslreqinfo
			WHERE HULLNUM = (
				SELECT HULLNUM FROM SCHEDULERINFO
					WHERE UID = #{uid}
				)
			  AND STATUS = 'ACT'
			)
	</select>
	<select id="getVesselReqInfoDetListByHullNumCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getVesselReqInfoBySchedinfoUid" parameterType="paramBean" resultType="vsslReqInfoBean">
		SELECT
			UID, HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER
		FROM VSSLREQINFO
		WHERE SCHEDINFOUID = #{uid}
	</select>

	<select id="getVesselReqInfoDetListBySchedinfoUid" parameterType="paramBean" resultType="vsslReqInfoDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
		UID, VSSLREQINFOUID, SEQ, REQINFOTITLE, ITEM
		, UNIT, NAME, RPM, LOADRATE, 'R' as FLAG
		FROM VSSLREQINFODETAIL
		WHERE VSSLREQINFOUID = (
			SELECT UID FROM VSSLREQINFO
			WHERE SCHEDINFOUID = #{uid}
		)
	</select>
	<select id="getVesselReqInfoDetListBySchedinfoUidCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	

	<delete id="deleteVesselReqInfoDetail" parameterType="int">
		DELETE FROM VSSLREQINFODETAIL
		WHERE UID = #{uid}
	</delete>

	<insert id="insertVesselReqInfoDetail" parameterType="vsslReqInfoDetailBean">
		INSERT INTO VSSLREQINFODETAIL (VSSLREQINFOUID, SEQ, REQINFOTITLE, ITEM, UNIT, NAME<if test="rpm != null and rpm.length() > 0">, RPM</if><if test="loadrate != null and loadrate.length() > 0">, LOADRATE</if>, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		values (#{vsslreqinfouid}, #{seq}, #{reqinfotitle}, #{item}, #{unit}, #{name}<if test="rpm != null and rpm.length() > 0">, #{rpm}</if><if test="loadrate != null and loadrate.length() > 0">, #{loadrate}</if>, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateVesselReqInfoDetail" parameterType="vsslReqInfoDetailBean">
		UPDATE VSSLREQINFODETAIL SET SEQ = #{seq}
		, REQINFOTITLE = #{reqinfotitle}
		, ITEM = #{item}
		, UNIT = #{unit}
		, NAME = #{name}
		<choose>
			<when test="rpm != null and rpm.length() > 0">, RPM = #{rpm}</when>
		    <otherwise>, RPM = null</otherwise>
		</choose>
		<choose>
			<when test="loadrate != null and loadrate.length() > 0">, LOADRATE = #{loadrate}</when>
			<otherwise>, LOADRATE = null</otherwise>
		</choose>
		, UPDATEBY = #{userUid}
		, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<insert id="insertShipCond" parameterType="shipCondBean">
		INSERT INTO SHIPCOND (SCHEDINFOUID, COND, SDATE, STIME, EDATE, ETIME) VALUES(#{schedinfouid}, #{cond}, #{sdate}, #{stime}, #{edate}, #{etime})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<delete id="deleteShipCond" parameterType="int">
		DELETE FROM SHIPCOND WHERE SCHEDINFOUID = #{schedinfouid}
	</delete>

	<select id="getShipCondList" parameterType="paramBean" resultType="shipCondBean">
		SELECT UID, SCHEDINFOUID, COND, SDATE, STIME, EDATE, ETIME FROM SHIPCOND WHERE SCHEDINFOUID = #{uid}
	</select>
	
	<update id="changeStatusVesselReqInfoFromScheduler" parameterType="paramBean">
		UPDATE VSSLREQINFO SET STATUS = #{status}, UPDATEBY = ${userUid}, UPDATEDATE = SYSDATE()
		WHERE SCHEDINFOUID = #{uid}
	</update>
	
	<delete id="deleteVesselReqInfoFromScheduler" parameterType="int">
		DELETE FROM VSSLREQINFO WHERE SCHEDINFOUID = #{uid}
	</delete>

	<delete id="deleteVesselReqInfoDetailFromScheduler" parameterType="int">
		DELETE FROM VSSLREQINFODETAIL WHERE VSSLREQINFOUID IN (SELECT UID FROM VSSLREQINFO WHERE SCHEDINFOUID = #{uid})
	</delete>

	<update id="updateScheCrewDays" parameterType="schedulerInfoBean">
		UPDATE SCHEDULERINFO
		SET SCHECREWSDATE = #{scheCrewSdate}
		  , SCHECREWPERIOD = #{scheCrewPeriod}
		  , UPDATEBY = #{userUid}
		  , UPDATEDATE =SYSDATE()
		WHERE UID = #{uid}
	</update>

	<insert id="insertSchedulerCrewInfo" parameterType="schedulerCrewInfoBean">
		INSERT INTO SCHEDULERCREWINFO
		(SCHEDULERINFOUID, CATEGORY, `POSITION`, COMPANY, DEPARTURE, NAME, WORKTYPE, `RANK`, COMNUM, SSNUM, TEL, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE, SEQ)
		VALUES(#{schedulerInfoUid}, #{category}, #{position}, #{company}, #{departure}, #{name}, #{workType}, #{rank}, #{comNum}, #{ssNum}, #{tel}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE(), #{seq})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertSchedulerCrewDetail" parameterType="schedulerCrewDetailBean">
		INSERT INTO SCHEDULERCREWDETAIL
		(SCHEDULERCREWINFOUID, BARKINGCODE, BARKINGDATE)
		VALUES(#{schedulerCrewInfoUid}, #{barkingCode}, #{barkingDate})
	</insert>

	<update id="updateSchedulerCrewInfo" parameterType="schedulerCrewInfoBean">
		UPDATE SCHEDULERCREWINFO SET CATEGORY = #{category}
									, `POSITION` = #{position}
		                            , COMPANY = #{company}
		                            , DEPARTURE = #{departure}
		                            , NAME = #{name}
		                            , WORKTYPE = #{workType}
		                            , `RANK` = #{rank}
		                            , COMNUM = #{comNum}
		                            , SSNUM = #{ssNum}
		                            , TEL = #{tel}
		                            , UPDATEBY = #{userUid}
		                            , UPDATEDATE = SYSDATE()
		                            , SEQ = #{seq}
		WHERE UID = #{uid}
	</update>

	<delete id="deleteSchedulerCrewInfo" parameterType="int">
		DELETE FROM SCHEDULERCREWINFO WHERE UID = #{uid}
	</delete>

	<delete id="deleteSchedulerCrewDetailAll" parameterType="int">
		DELETE FROM SCHEDULERCREWDETAIL WHERE SCHEDULERCREWINFOUID = #{schedulerCrewInfoUid}
	</delete>

	<resultMap id="schedulerCrewInfoMap" type="schedulerCrewInfoBean">
		<result column="uid" property="uid" javaType="java.lang.Integer" />
		<collection column="UID" property="schedulerCrewDetailList" javaType="java.util.ArrayList" select="getSchedulerCrewDetailList" />
	</resultMap>

	<select id="getSchedulerCrewInfoList" parameterType="int" resultMap="schedulerCrewInfoMap">
		SELECT
		    UID, SCHEDULERINFOUID, CATEGORY, `POSITION`, COMPANY
		     , DEPARTURE, NAME, WORKTYPE, `RANK`, COMNUM
		     , SSNUM, TEL, SEQ
		FROM SCHEDULERCREWINFO
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</select>

	<select id="getSchedulerCrewDetailList" parameterType="int" resultType="schedulerCrewDetailBean">
		SELECT BARKINGCODE, BARKINGDATE
		FROM SCHEDULERCREWDETAIL
		WHERE SCHEDULERCREWINFOUID = #{uid}
	</select>

	<select id="getSchedulerVersionInfo" parameterType="int" resultType="schedulerVersionInfoBean">
		SELECT UID, PLANREVNUM, EXECREVNUM, COMPREVNUM
		FROM SCHEDULERVERSIONINFO
		WHERE UID = #{uid}
	</select>

	<insert id="insertSchedulerVersionInfo" parameterType="schedulerVersionInfoBean">
		INSERT INTO SCHEDULERVERSIONINFO (PLANREVNUM, EXECREVNUM, COMPREVNUM, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		VALUES (#{planRevNum}, #{execRevNum}, #{compRevNum}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateSchedulerVersionInfoPlanRevNum" parameterType="schedulerVersionInfoBean">
		UPDATE SCHEDULERVERSIONINFO SET PLANREVNUM = #{planRevNum}
		                            , UPDATEBY = #{userUid}
		                            , UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<update id="updateSchedulerVersionInfoExecRevNum" parameterType="schedulerVersionInfoBean">
		UPDATE SCHEDULERVERSIONINFO SET EXECREVNUM = #{execRevNum}
		                              , UPDATEBY = #{userUid}
		                              , UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<update id="updateSchedulerVersionInfoCompRevNum" parameterType="schedulerVersionInfoBean">
		UPDATE SCHEDULERVERSIONINFO SET COMPREVNUM = #{compRevNum}
		                              , UPDATEBY = #{userUid}
		                              , UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>

	<update id="updateSchdulerRevNum" parameterType="schedulerInfoBean">
		UPDATE SCHEDULERINFO SET REVNUM = #{revnum}
		WHERE UID = #{uid}
	</update>

	<insert id="insertSchedulerNewVersion" parameterType="schedulerInfoBean">
		INSERT INTO SCHEDULERINFO (HULLNUM, SHIPTYPE, DESCRIPTION, OWNER, DEPARTMENT, SDATE, EDATE, STATUS, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE, SCHEDTYPE, SCHEDULERVERSIONINFOUID, REVNUM, SCHECREWSDATE, SCHECREWPERIOD)
		SELECT HULLNUM, SHIPTYPE, DESCRIPTION, OWNER, DEPARTMENT, SDATE, EDATE, STATUS, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE, SCHEDTYPE, SCHEDULERVERSIONINFOUID, REVNUM,
		       SCHECREWSDATE, SCHECREWPERIOD
		FROM SCHEDULERINFO
		WHERE UID = #{uid}
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<insert id="insertSchedulerDetailNewVersion" parameterType="scheDetailInfoBean">
		INSERT INTO SCHEDULERDETAIL (SCHEDINFOUID,CATEGORY,TCNUM,DESCRIPTION,CTYPE,LOADRATE,DTYPE,READYTIME,SDATE,STIME,EDATE,ETIME,SEQ,PER,CODEDETUID,SAMETCNUM,INSERTBY,INSERTDATE,UPDATEBY,UPDATEDATE, CODEDETTCNUM, CODEDETDESC)
		SELECT #{newschedinfouid}, CATEGORY, TCNUM, DESCRIPTION, CTYPE, LOADRATE, DTYPE, READYTIME, SDATE, STIME,EDATE,ETIME,SEQ,PER,CODEDETUID,SAMETCNUM,INSERTBY,INSERTDATE,UPDATEBY,UPDATEDATE, CODEDETTCNUM, CODEDETDESC
		FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedinfouid}
	</insert>

	<select id="getSchedulerVersionList" parameterType="schedulerInfoBean" resultType="schedulerInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
		S.UID
		, HULLNUM
		, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE) AS SHIPTYPE
		, DESCRIPTION
		, DEPARTMENT
		, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
		, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE
		, DATE_FORMAT(EDATE, '%Y-%m-%d') AS EDATE
		, STATUS
		, SCHEDULERVERSIONINFOUID
		, REVNUM
		, DATE_FORMAT(S.INSERTDATE, '%Y-%m-%d %H:%i:%S') AS INSERTDATE
		FROM SCHEDULERINFO S
		INNER JOIN SCHEDULERVERSIONINFO SVI ON (S.SCHEDULERVERSIONINFOUID = SVI.UID)
		<where>
		    AND S.SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
			<if test="shiptype != null and shiptype != 'ALL'">
				AND S.SHIPTYPE = #{shiptype}
			</if>
			<if test="hullnum != null and hullnum.length() > 0">
				AND LOWER(S.HULLNUM) LIKE CONCAT('%', LOWER(#{hullnum}), '%')
			</if>
			<if test="ownerName != null and ownerName.length() > 0">
				AND OWNER IN (SELECT U.UID FROM USERINFO U WHERE LOWER(U.FIRSTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') OR LOWER(U.LASTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') )
			</if>
			<if test="revnum != null and revnum.length() > 0">
				AND S.REVNUM LIKE CONCAT('%', UPPER(#{revnum}), '%')
			</if>
		</where>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY S.SHIPTYPE
			</when>
			<when test="sort != null and sort == 'hullnum'">
				ORDER BY S.HULLNUM
			</when>
			<when test="sort != null and sort == 'description'">
				ORDER BY S.DESCRIPTION
			</when>
			<when test="sort != null and sort == 'owner'">
				ORDER BY S.OWNER
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE
			</when>
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE
			</when>
			<otherwise>
				ORDER BY S.INSERTDATE
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC
			</when>
			<when test="order != null and order == 'asc'">
				ASC
			</when>
			<otherwise>
				DESC
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getSchedulerVersionListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>

	<select id="getSchedulerDepartureList" parameterType="schedulerInfoBean" resultType="schedulerInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
		S.UID
		, HULLNUM
		, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE) AS SHIPTYPE
		, DESCRIPTION
		, DEPARTMENT
		, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
		, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE
		, DATE_FORMAT(EDATE, '%Y-%m-%d') AS EDATE
		, STATUS
		, SCHEDULERVERSIONINFOUID
		, REVNUM
		, DATE_FORMAT(S.INSERTDATE, '%Y-%m-%d %H:%i:%S') AS INSERTDATE
		FROM SCHEDULERINFO S
		INNER JOIN SCHEDULERVERSIONINFO SVI ON (S.SCHEDULERVERSIONINFOUID = SVI.UID AND S.REVNUM = SVI.PLANREVNUM AND SVI.EXECREVNUM IS NOT NULL)
		<where>
			<if test="shiptype != null and shiptype != 'ALL'">
				AND S.SHIPTYPE = #{shiptype}
			</if>
			<if test="hullnum != null and hullnum.length() > 0">
				AND LOWER(S.HULLNUM) LIKE CONCAT('%', LOWER(#{hullnum}), '%')
			</if>
			<if test="ownerName != null and ownerName.length() > 0">
				AND OWNER IN (SELECT U.UID FROM USERINFO U WHERE LOWER(U.FIRSTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') OR LOWER(U.LASTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') )
			</if>
			<if test="revnum != null and revnum.length() > 0">
				AND S.REVNUM = #{revnum}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY S.SHIPTYPE
			</when>
			<when test="sort != null and sort == 'hullnum'">
				ORDER BY S.HULLNUM
			</when>
			<when test="sort != null and sort == 'description'">
				ORDER BY S.DESCRIPTION
			</when>
			<when test="sort != null and sort == 'owner'">
				ORDER BY S.OWNER
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE
			</when>
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE
			</when>
			<otherwise>
				ORDER BY S.INSERTDATE
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	<select id="getSchedulerDepartureListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>

	<select id="getSchedulerReportInfo" parameterType="map" resultType="schedulerReportInfoBean">
		SELECT
		    SRI.UID, SRI.SCHEDULERVERSIONINFOUID, SRI.EXECREVNUM, SRI.REPORTKEY, SRI.REPORTVALUE, SRI.REPORTKEYTYPE, SRI.PLANREVNUM
		FROM SCHEDULEREPORTINFO SRI
		WHERE SRI.SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
			AND SRI.EXECREVNUM = #{execRevNum}
	</select>

	<insert id="insertDepartureReportRegInfo" parameterType="map">
		INSERT INTO SCHEDULEREPORTINFO
		(SCHEDULERVERSIONINFOUID, ROWIDX, PLANREVNUM, EXECREVNUM, COMPREVNUM, REPORTKEY, REPORTVALUE, REPORTKEYTYPE, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE)
		VALUES (#{schedulerVersionInfoUid}, #{rowIdx}, #{planRevNum}, #{execRevNum}, #{compRevNum}, #{reportKey}, #{reportValue}, #{reportKeyType}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE())
	</insert>

	<update id="updateDepartureReportRegInfo" parameterType="map">
		UPDATE SCHEDULEREPORTINFO SET REPORTVALUE = #{reportValue}
									, UPDATEBY = #{userUid}
									, UPDATEDATE = SYSDATE()
		                            , ROWIDX = #{rowIdx}
		WHERE UID = #{uid}
		AND REPORTKEY = #{reportKey}
	</update>

	<select id="getSchedulerDetailStartTime" parameterType="int" resultType="string">
		SELECT CONCAT(SDATE, CONCAT(' ', STIME))
		FROM SCHEDULERDETAIL S
		WHERE SCHEDINFOUID = #{schedInfoUid}
		  AND SDATE != '0000-00-00'
		ORDER BY SDATE
		LIMIT 1
	</select>

	<select id="getSchedulerDetailEndTime" parameterType="int" resultType="string">
		SELECT CONCAT(EDATE, CONCAT(' ', ETIME))
		FROM SCHEDULERDETAIL S
		WHERE SCHEDINFOUID = #{schedInfoUid}
		  AND EDATE != '0000-00-00'
		ORDER BY EDATE DESC
		LIMIT 1
	</select>

	<select id="getSchedulerCompReportInfo" parameterType="map" resultType="schedulerReportInfoBean">
		SELECT
			SRI.UID, SRI.SCHEDULERVERSIONINFOUID, SRI.EXECREVNUM, SRI.REPORTKEY, SRI.REPORTVALUE, SRI.REPORTKEYTYPE, SRI.PLANREVNUM
		FROM SCHEDULEREPORTINFO SRI
		WHERE SRI.SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
		  AND SRI.COMPREVNUM = #{compRevNum}
		  AND SRI.REPORTKEYTYPE IS NULL
	</select>

	<select id="getSchedulerCompReportList" parameterType="map" resultType="schedulerReportInfoBean">
		SELECT
			SRI.UID, SRI.SCHEDULERVERSIONINFOUID, SRI.EXECREVNUM, SRI.REPORTKEY, SRI.REPORTVALUE, SRI.REPORTKEYTYPE, SRI.PLANREVNUM, SRI.ROWIDX
		FROM SCHEDULEREPORTINFO SRI
		WHERE SRI.SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
		  AND SRI.COMPREVNUM = #{compRevNum}
		  AND SRI.REPORTKEYTYPE = #{reportKeyType}
		ORDER BY SRI.ROWIDX
	</select>

	<select id="getSchedulerCompReportListCnt" parameterType="map" resultType="int">
		SELECT
		    COUNT(*)
		FROM (
			SELECT
				COUNT(*)
			FROM SCHEDULEREPORTINFO SRI
			WHERE SRI.SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
			  AND SRI.COMPREVNUM = #{compRevNum}
			  AND SRI.REPORTKEYTYPE = #{reportKeyType}
			GROUP BY SRI.ROWIDX) GSRI
	</select>

	<select id="getSchedulerReportInfoKey" parameterType="map" resultType="string">
		SELECT REPORTVALUE
		FROM SCHEDULEREPORTINFO S
		WHERE SCHEDULERVERSIONINFOUID = #{schedulerVersionInfoUid}
		  AND EXECREVNUM = #{execRevNum}
		  AND REPORTKEY = #{reportKey}
	</select>

	<select id="getSchedulerCompRowDataList" parameterType="scheDetailInfoBean" resultType="scheDetailInfoBean">
		SELECT
			UID, SCHEDINFOUID, CATEGORY , TCNUM , DESCRIPTION , CTYPE , LOADRATE , DTYPE, SEQ, PER, READYTIME, NOTE, CODEDETUID, SAMETCNUM
			, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE, DATE_FORMAT(STIME , '%H:%i') as STIME
			, DATE_FORMAT(EDATE, '%Y-%m-%d') as EDATE, DATE_FORMAT(ETIME , '%H:%i') as ETIME
			, DATE_FORMAT(PERFORMANCESDATE, '%Y-%m-%d') as PERFORMANCESDATE, DATE_FORMAT(PERFORMANCESTIME , '%H:%i') as PERFORMANCESTIME
			, DATE_FORMAT(PERFORMANCEEDATE, '%Y-%m-%d') as PERFORMANCEEDATE, DATE_FORMAT(PERFORMANCEETIME , '%H:%i') as PERFORMANCEETIME
			, 'R' as FLAG
			, CODEDETTCNUM
			, CODEDETDESC
		FROM SCHEDULERDETAIL S
		WHERE SCHEDINFOUID = #{uid}
		AND SDATE IS NOT NULL AND STIME IS NOT NULL
		AND EDATE IS NOT NULL AND ETIME IS NOT NULL
		AND PERFORMANCESDATE IS NOT NULL AND PERFORMANCEEDATE IS NOT NULL
		AND PERFORMANCESTIME IS NOT NULL AND PERFORMANCEETIME IS NOT NULL
		<if test="sdate != null and sdate.length() > 0 and edate == null">
			AND DATE_FORMAT(S.SDATE, '%Y-%m-%d') <![CDATA[ = ]]> #{sdate}
		</if>
		<if test="sdate != null and sdate.length() > 0 and edate != null and edate.length() > 0">
			AND (DATE_FORMAT(S.SDATE, '%Y-%m-%d') <![CDATA[ <= ]]> #{sdate}
			OR DATE_FORMAT(S.EDATE, '%Y-%m-%d') <![CDATA[ >= ]]> #{edate})
		</if>
		ORDER BY S.SEQ
	</select>

	<delete id="deleteDepartureReportRegInfo" parameterType="int">
		DELETE FROM SCHEDULEREPORTINFO WHERE UID = #{uid}
	</delete>
	
	<select id="isOfflineMode" parameterType="int" resultType="string">
		SELECT ISOFF FROM SCHEDULERINFO WHERE UID = #{uid}
	</select>
	
	<select id="getScheduleCodeInfoListForNewSche" parameterType="scheCodeDetailBean" resultType="scheCodeInfoBean">
		SELECT UID, DESCRIPTION 
		FROM SCHEDULECODEINFO
		WHERE STATUS = 'ACT' AND SHIPTYPE = #{shiptype} AND SCHEDTYPE = #{schedtype}
	</select>
	
	<select id="getScheduleCodeDetailListForNewSche" parameterType="int" resultType="scheCodeDetailBean">
		SELECT UID, SCHECODEINFOUID, LV1CODE, LV2CODE, LV3CODE, LV4CODE, DISPLAYCODE, DESCRIPTION, DTYPE, CTYPE, 
			LOADRATE, LOADSTR, IFNULL(PER, '') AS PER , IFNULL(READYTIME, '') AS READYTIME, SEQ, SAMETCNUM
		FROM SCHEDULECODEDETAIL
		WHERE SCHECODEINFOUID = #{uid}
		ORDER BY SEQ, LV1CODE, LV2CODE, LV3CODE, LV4CODE
	</select>
	
	<select id="getScheCodeDetTcSearchListForMulti" parameterType="scheHierarchyBean" resultType="scheHierarchyBean">
		SELECT UID, CODE, DISPLAYCODE, DESCRIPTION, CODELEVEL, PARENTUID,  
			(SELECT CODE FROM SCHEDULEHIERARCHY P WHERE P.UID = S.PARENTUID) AS PARENTCODE
		FROM SCHEDULEHIERARCHY S
		WHERE 1=1
			<if test="displaycode != null and displaycode.length() > 0">
				AND LOWER(S.DISPLAYCODE) LIKE CONCAT('%', LOWER(#{displaycode}), '%')
			</if>
			<if test="description != null and description.length() > 0">
				AND LOWER(S.DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
			</if>
		ORDER BY S.CODELEVEL, S.PARENTUID, S.DISPLAYCODE, S.CODE, S.DESCRIPTION
	</select>
	
	<select id="get1LevelCodeList" resultType="scheHierarchyBean">
		SELECT DISPLAYCODE, DESCRIPTION
		FROM SCHEDULEHIERARCHY
		WHERE CODELEVEL = 1
		ORDER BY DISPLAYCODE
	</select>
</mapper>