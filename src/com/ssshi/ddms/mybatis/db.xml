<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssshi.ddms.mybatis.dao.DbDaoI">

	<select id="getDomainList" parameterType="domainBean" resultType="domainBean">
		SELECT UID, CAT, DOMAIN, DESCRIPTION, DATATYPE 
		FROM DOMAIN 
		WHERE STATUS = 'ACT'
		<if test="cat != null and cat != 'ALL'">
			AND CAT = #{cat}
		</if>
		<if test="domain != null and domain.length() > 0">
			AND UPPER(DOMAIN) LIKE CONCAT('%', UPPER(#{domain}), '%') 
		</if>
		<if test="description != null and description.length() > 0">
			AND UPPER(DESCRIPTION) LIKE CONCAT('%', UPPER(#{description}), '%') 
		</if>
		ORDER BY SHIPINFOUID, UID 
	</select>

	<select id="getDomainInfoList" parameterType="int" resultType="domainInfoBean">
		SELECT UID, VAL, INVAL, DESCRIPTION  
		FROM DOMAININFO 
		WHERE DOMAINUID = #{uid} 
		ORDER BY UID
	</select>
	
	<select id="getDomainInfoListByDomainID" parameterType="String" resultType="domainInfoBean">
		SELECT UID, VAL, INVAL, DESCRIPTION  
		FROM DOMAININFO 
		WHERE DOMAINUID IN (SELECT UID FROM DOMAIN D WHERE UPPER(D.DOMAIN) = UPPER(#{domain})) 
		ORDER BY UID
	</select>
	
	<insert id="insertDomain" parameterType="domainBean">
		INSERT INTO DOMAIN (DOMAIN, DESCRIPTION, DATATYPE, CAT, STATUS, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE) 
		VALUES (#{domain}, #{description}, #{dataType}, #{cat}, 'ACT', #{userUid}, SYSDATE(), #{userUid}, SYSDATE()) 
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<insert id="insertDomainInfo" parameterType="domainInfoBean">
		INSERT INTO DOMAININFO (DOMAINUID, VAL, INVAL, DESCRIPTION, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE) 
		VALUES (#{domainUid}, #{val}, #{inVal}, #{description}, #{userUid}, SYSDATE(), #{userUid}, SYSDATE()) 
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<update id="updateDomain" parameterType="domainBean">
		UPDATE DOMAIN SET DESCRIPTION = #{description}, UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<update id="updateDomainInfo" parameterType="domainInfoBean">
		UPDATE DOMAININFO SET DESCRIPTION = #{description}, UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<select id="getVesselList" parameterType="shipInfoBean" resultType="shipInfoBean">
		SELECT 
			UID, SHIPNUM, TITLE, IMO, MMSI 
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE) AS SHIPTYPE
			, FLAG, ISDEFAULT
		FROM SHIPINFO
		WHERE STATUS = 'ACT' 
		<if test="imo != null and imo.length() > 0">
			AND LOWER(IMO) LIKE CONCAT('%', LOWER(#{imo}), '%') 
		</if>
		<if test="title != null and title.length() > 0">
			AND LOWER(TITLE) LIKE CONCAT('%', LOWER(#{title}), '%') 
		</if>
		<if test="shipNum != null and shipNum.length() > 0">
			AND LOWER(SHIPNUM) LIKE CONCAT('%', LOWER(#{shipNum}), '%') 
		</if>
		ORDER BY UID 
	</select>
	
	<select id="checkScheduleVessel" parameterType="int" resultType="int">
		SELECT COUNT(UID) AS CNT 
		FROM SCHEDULERINFO
		WHERE HULLNUM IN (SELECT SHIPNUM FROM SHIPINFO S WHERE S.UID = #{uid})
	</select>
	
	<delete id="deleteVessel" parameterType="int">
		DELETE FROM SHIPINFO WHERE UID = #{uid} AND ISDEFAULT != 'Y'
	</delete>
	
	<select id="checkExistVessel" parameterType="shipInfoBean" resultType="int">
		SELECT COUNT(UID)
		FROM SHIPINFO
		<choose>
			<when test="cmd != null and cmd == 'UPDATE'">
				WHERE UID != #{uid} AND (IMO = #{imo} OR SHIPNUM = #{shipNum})
			</when>
			<otherwise>
				WHERE IMO = #{imo} OR SHIPNUM = #{shipNum}
			</otherwise>
		</choose>
	</select>
	
	<insert id="insertVessel" parameterType="shipInfoBean">
		INSERT INTO SHIPINFO (SHIPNUM, TITLE, IMO, MMSI, SHIPTYPE, REGOWNER, BUILTDATE, FLAG, GROSSTON, DWT, LOA, 
			DRAUGHT, BUILDER, BUILTBY, ISDEFAULT, STATUS, INSERTBY, INSERTDATE, UPDATEBY, UPDATEDATE) 
		VALUES (#{shipNum}, #{title}, #{imo}, #{mmsi}, #{shipType}, #{regOwner}, #{builtDate}, #{flag}, #{grossTon}, #{dwt}, #{loa}, 
			#{draught}, #{builder}, #{builtBy}, 'N', 'ACT', #{userUid}, SYSDATE(), #{userUid}, SYSDATE()) 
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<select id="getVessel" parameterType="paramBean" resultType="shipInfoBean">
		SELECT 
			UID, SHIPNUM, TITLE, IMO, MMSI
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE) AS SHIPTYPE
			, REGOWNER, BUILTDATE, FLAG, GROSSTON, DWT, LOA, DRAUGHT, BUILDER, BUILTBY
		FROM SHIPINFO
		WHERE UID = #{uid}
	</select>
	
	<update id="updateVessel" parameterType="shipInfoBean">
		UPDATE SHIPINFO SET SHIPNUM = #{shipNum}, TITLE = #{title}, IMO = #{imo}, MMSI = #{mmsi}, SHIPTYPE = #{shipType}, REGOWNER = #{regOwner}, 
			BUILTDATE = #{builtDate}, FLAG = #{flag}, GROSSTON = #{grossTon}, DWT = #{dwt}, LOA = #{loa}, DRAUGHT = #{draught}, BUILDER = #{builder}, BUILTBY = #{builtBy}, 
			UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<select id="getDomain" parameterType="int" resultType="domainBean">
		SELECT UID, CAT, DOMAIN, DESCRIPTION, DATATYPE 
		FROM DOMAIN
		WHERE UID = #{uid} 
	</select>
	
	<delete id="deleteDomainInfo" parameterType="int">
		DELETE FROM DOMAININFO WHERE UID = #{uid}
	</delete>
	
	<delete id="deleteDomainInfoByDomainUid" parameterType="int">
		DELETE FROM DOMAININFO WHERE DOMAINUID = #{uid}
	</delete>
	
	<delete id="deleteDomain" parameterType="int">
		DELETE FROM DOMAIN WHERE UID = #{uid}
	</delete>
	
	<update id="resetDefaultVessel" parameterType="paramBean">
		UPDATE SHIPINFO SET ISDEFAULT = 'N', UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
	</update>
	
	<update id="setDefaultVessel" parameterType="paramBean">
		UPDATE SHIPINFO SET ISDEFAULT = 'Y', UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
	<select id="getVesselListForPop" parameterType="shipInfoBean" resultType="shipInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, SHIPNUM, TITLE, IMO, MMSI
			, CONCAT(SHIPTYPE , "/", (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = SHIPTYPE)) AS SHIPTYPE
		FROM SHIPINFO
		WHERE 1=1
		<if test="imo != null and imo.length() > 0">
			AND LOWER(IMO) LIKE CONCAT('%', LOWER(#{imo}), '%') 
		</if>
		<if test="title != null and title.length() > 0">
			AND LOWER(TITLE) LIKE CONCAT('%', LOWER(#{title}), '%') 
		</if>
		<if test="shipNum != null and shipNum.length() > 0">
			AND LOWER(SHIPNUM) LIKE CONCAT('%', LOWER(#{shipNum}), '%') 
		</if>
		<if test="shipType != null and shipType.length() > 0">
			AND LOWER(SHIPTYPE) =  LOWER(#{shipType})
		</if>
		ORDER BY UID
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getVesselListForPopCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getVesselPageList" parameterType="shipInfoBean" resultType="shipInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, SHIPNUM, REGOWNER, SHIPCLASS, SHIPTYPE, TYPEMODEL, DOCK, LOC,
			ISSG, ISLOAD, ISUNLOAD, ISCOLD, ISTRIAL,
			FUEL, LC, WORKFINISH,
			CREW1PRO, CREW1LEAD, CREW2PRO, CREW2LEAD, CREW3PRO, CREW3LEAD, 
			COMMAIN, COMSUB, OPERATE,
			PROJSEQ
		FROM SHIPINFO SI
		WHERE STATUS = 'ACT' 
		<if test="title != null and title.length() > 0">
			AND LOWER(TITLE) LIKE CONCAT('%', LOWER(#{title}), '%') 
		</if>
		<if test="shipNum != null and shipNum.length() > 0">
			AND LOWER(SHIPNUM) LIKE CONCAT('%', LOWER(#{shipNum}), '%') 
		</if>
		ORDER BY SHIPNUM, UID DESC 
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getVesselPageListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<update id="updateVesselDetail" parameterType="shipInfoBean">
		UPDATE SHIPINFO SET CREW1PRO = #{crew1Pro}, CREW1LEAD = #{crew1Lead}, CREW2PRO = #{crew2Pro}, CREW2LEAD = #{crew2Lead}, CREW3PRO = #{crew3Pro}, CREW3LEAD = #{crew3Lead}, 
			COMMAIN = #{comMain}, COMSUB = #{comSub}, OPERATE = #{operate}, FUEL = #{fuel}, 
			ISTRIAL = #{isTrial}, ISLOAD = #{isLoad}, ISUNLOAD = #{isUnload}, ISCOLD = #{isCold}, 
			UPDATEBY = #{userUid}, UPDATEDATE = SYSDATE()
		WHERE UID = #{uid}
	</update>
	
</mapper>