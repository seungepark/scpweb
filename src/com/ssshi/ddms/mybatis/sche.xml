<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssshi.ddms.mybatis.dao.ScheDaoI"> 

	<select id="getScheList" parameterType="schedulerInfoBean" resultType="schedulerInfoBean">
		SELECT SQL_CALC_FOUND_ROWS
			S.UID
			, S.HULLNUM
			, (SELECT DESCRIPTION FROM DOMAININFO D WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE') AND D.VAL = S.SHIPTYPE) AS SHIPTYPE
			, S.DESCRIPTION
			, S.DEPARTMENT
			, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
			, DATE_FORMAT(S.SDATE, '%Y-%m-%d') as SDATE
			, DATE_FORMAT(S.EDATE, '%Y-%m-%d') AS EDATE
			, S.STATUS
			, S.ISOFF
			, S.SCHEDULERVERSIONINFOUID
			, S.SCHEDTYPE
			, S.REVNUM
			, S.TRIALKEY
			, DATE_FORMAT(S.INSERTDATE, '%Y-%m-%d %H:%i:%S') AS INSERTDATE
			, TI.TRIALSTATUS, SI.REGOWNER
			, CONCAT(UI.FIRSTNAME, ' ', UI.LASTNAME) AS INSERTNAME
			, SI.PROJSEQ
		FROM SCHEDULERINFO S
		INNER JOIN SCHEDULERVERSIONINFO SVI ON (S.SCHEDULERVERSIONINFOUID = SVI.UID AND S.REVNUM = SVI.PLANREVNUM)
		LEFT OUTER JOIN SCHETRIALINFO TI ON (S.UID = TI.SCHEDULERINFOUID)
		LEFT OUTER JOIN SHIPINFO SI ON (S.HULLNUM = SI.SHIPNUM)
		LEFT OUTER JOIN USERINFO UI ON (S.INSERTBY = UI.UID)
		WHERE S.STATUS = 'ACT'
		<if test="shiptype != null and shiptype != 'ALL'">
			AND S.SHIPTYPE = #{shiptype}
		</if>
		<if test="hullnum != null and hullnum.length() > 0">
			AND LOWER(S.HULLNUM) LIKE CONCAT('%', LOWER(#{hullnum}), '%')
		</if>
		<if test="ownerName != null and ownerName.length() > 0">
			AND OWNER IN (SELECT U.UID FROM USERINFO U WHERE LOWER(U.FIRSTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') OR LOWER(U.LASTNAME) LIKE CONCAT('%', LOWER(#{ownerName}), '%') )
		</if>
		<if test="revnum != null and revnum.length() > 0">
			AND S.REVNUM = #{revnum}
		</if>
		<choose>
			<when test="sort != null and sort == 'shiptype'">
				ORDER BY S.SHIPTYPE
			</when>
			<when test="sort != null and sort == 'hullnum'">
				ORDER BY S.HULLNUM
			</when>
			<when test="sort != null and sort == 'desc'">
				ORDER BY S.DESCRIPTION
			</when>
			<when test="sort != null and sort == 'ownerName'">
				ORDER BY S.OWNER
			</when>
			<when test="sort != null and sort == 'department'">
				ORDER BY S.DEPARTMENT
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE
			</when>
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE
			</when>
			<when test="sort != null and sort == 'trialStatus'">
				ORDER BY TI.TRIALSTATUS
			</when>
			<when test="sort != null and sort == 'status'">
				ORDER BY S.STATUS
			</when>
			<when test="sort != null and sort == 'regOwner'">
				ORDER BY SI.REGOWNER
			</when>
			<when test="sort != null and sort == 'insertName'">
				ORDER BY CONCAT(UI.FIRSTNAME, ' ', UI.LASTNAME)
			</when>
			<when test="sort != null and sort == 'schedType'">
				ORDER BY S.SCHEDTYPE
			</when>
			<when test="sort != null and sort == 'series'">
				ORDER BY SI.MAINHULLNUM, SI.SEQNO 
			</when>
			<otherwise>
				ORDER BY S.INSERTDATE
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC
			</when>
			<otherwise>
				ASC
			</otherwise>
		</choose>
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getScheListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getTrialStatus" parameterType="int" resultType="string">
		SELECT TRIALSTATUS 
		FROM SCHETRIALINFO 
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} 
	</select>

	<select id="getOngoChangeDateMinute" parameterType="int" resultType="int">
		SELECT TIMESTAMPDIFF(MINUTE, DATE_FORMAT(ONGOCHANGEDATE, '%Y-%m-%d %H:%i'), 
			DATE_FORMAT(SYSDATE(), '%Y-%m-%d %H:%i'))
		FROM SCHETRIALINFO 
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} 
	</select>
	
	<select id="getCrewList" parameterType="int" resultType="scheCrewBean">
		SELECT UID, KIND, COMPANY, DEPARTMENT, NAME, RANK, IDNO, WORKTYPE1, WORKTYPE2, MAINSUB, FOODSTYLE, PERSONNO, PHONE, ISPLAN 
		FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</select>

	<select id="getCrewInOutList" parameterType="int" resultType="scheCrewInOutBean">
		SELECT UID, INOUTDATE, SCHEDULERINOUT, PERFORMANCEINOUT 
		FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{scheCrewUid}
		ORDER BY INOUTDATE
	</select>

	<select id="getCrewUidList" parameterType="int" resultType="int">
		SELECT UID FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</select>
	
	<delete id="deleteCrewList" parameterType="int">
		DELETE FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</delete>
	
	<delete id="deleteCrewInoutList" parameterType="int">
		DELETE FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{scheCrewUid}
	</delete>
	
	<insert id="insertCrew" parameterType="scheCrewBean">
		INSERT INTO SCHECREW (SCHEDULERINFOUID, KIND, COMPANY, DEPARTMENT, NAME, RANK, IDNO, WORKTYPE1, WORKTYPE2, 
			MAINSUB, FOODSTYLE, PERSONNO, PHONE, ISPLAN, ISNONE, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}, #{kind}, #{company}, #{department}, #{name}, #{rank}, #{idNo}, #{workType1}, #{workType2}, 
			#{mainSub}, #{foodStyle}, #{personNo}, #{phone}, #{isPlan}, 'N', SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>

	<insert id="insertCrewInOut" parameterType="scheCrewInOutBean">
		INSERT INTO SCHECREWINOUT (SCHECREWUID, INOUTDATE, SCHEDULERINOUT, PERFORMANCEINOUT, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{scheCrewUid}, #{inOutDate}, #{schedulerInOut}, #{performanceInOut}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
	</insert>
	
	<select id="getCommanderInfoList" parameterType="int" resultType="scheCrewBean">
		(SELECT NAME, PHONE, MAINSUB FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'A1' AND MAINSUB = 'M'
		LIMIT 1)
			UNION ALL
		(SELECT NAME, PHONE, MAINSUB FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'A1' AND MAINSUB = 'S'
		LIMIT 1)
	</select>
	
	<select id="getMainCrewInfo" parameterType="scheCrewBean" resultType="scheCrewBean">
		SELECT NAME, PHONE, WORKTYPE2 FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = #{workType2} AND MAINSUB = 'M'
			UNION ALL
		SELECT NAME, PHONE, WORKTYPE2 FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = #{workType2} AND MAINSUB = 'S'
			UNION ALL
		SELECT NAME, PHONE, WORKTYPE2 FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = #{workType2} AND MAINSUB = 'N'
		LIMIT 1
	</select>
	
	<select id="getCrewCntInfoList" parameterType="int" resultType="scheCrewBean">
		SELECT COUNT(UID) AS CNT, 'TOTAL' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'SHI' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE1 IN ('A', 'B', 'C', 'D')
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'OUT' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE1 = 'E'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'OWNER' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E1'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'CLASS' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E2'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'SE' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E3'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'CAPTAIN' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E4'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'MATE' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E5'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'ENG' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E6'
			UNION ALL
		SELECT COUNT(UID) AS CNT, 'ETC' AS KIND FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 IN ('E0', 'E7', 'E8')
	</select>
	
	<select id="getCrewCntInfoListForComp" parameterType="int" resultType="scheCrewBean">
		SELECT COUNT(C.UID) AS CNT, 'TOTAL' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid})
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'SHI' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE1 IN ('A', 'B', 'C', 'D'))
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'OUT' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE1 = 'E')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'OWNER' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E1')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'CLASS' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E2')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'SE' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E3')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'CAPTAIN' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E4')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'MATE' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E5')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'ENG' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 = 'E6')
		) C
			UNION ALL
		SELECT COUNT(C.UID) AS CNT, 'ETC' AS KIND FROM (
			SELECT DISTINCT SCHECREWUID AS UID FROM SCHECREWINOUT
			WHERE PERFORMANCEINOUT = 'B' AND SCHECREWUID IN (SELECT UID FROM SCHECREW WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND WORKTYPE2 IN ('E0', 'E7', 'E8'))
		) C
	</select>

	<select id="getTrialInfo" parameterType="int" resultType="scheTrialInfoBean">
		SELECT STI.UID, STI.TRIAL1SCHEDULERINFOUID, SI1.HULLNUM AS TRIAL1HULLNUM, SI1.SHIPTYPE AS TRIAL1SHIPTYPE,
			STI.TRIAL2SCHEDULERINFOUID, SI2.HULLNUM AS TRIAL2HULLNUM, SI2.SHIPTYPE AS TRIAL2SHIPTYPE,
			STI.ITPTOTALREMAIN, STI.ITPTOTALBASE, STI.ITPTRIALREMAIN, STI.ITPTRIALBASE, STI.ITPOUTFITTINGREMAIN , STI.ITPOUTFITTINGBASE, 
			STI.PUNCHTOTAL, STI.PUNCHTRIAL, STI.PUNCHOUTFITTING, 
			STI.FUELHFOSCHEDULER, STI.FUELMGOSCHEDULER, STI.FUELMDOSCHEDULER, STI.FUELLNGSCHEDULER, 
			STI.DRAFTFWDSCHEDULER, STI.DRAFTMIDSCHEDULER, STI.DRAFTAFTSCHEDULER, 
			STI.CREWREMARK, STI.REMARK
		FROM SCHETRIALINFO STI
			LEFT OUTER JOIN SCHEDULERINFO SI1 ON (STI.TRIAL1SCHEDULERINFOUID = SI1.UID)
			LEFT OUTER JOIN SCHEDULERINFO SI2 ON (STI.TRIAL2SCHEDULERINFOUID = SI2.UID)
		WHERE STI.SCHEDULERINFOUID = #{schedulerInfoUid} 
	</select>

	<select id="getTcCntList" parameterType="int" resultType="int">
		SELECT COUNT(UID) FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedulerInfoUid}
			UNION ALL
		SELECT COUNT(UID) FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'A'
			UNION ALL
		SELECT COUNT(UID) FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'B'
			UNION ALL
		SELECT COUNT(UID) FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'C'
<!-- 		SELECT COUNT(UID) FROM SCHEDULERDETAIL -->
<!-- 		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND SDATE != '0000-00-00' AND EDATE != '0000-00-00' -->
<!-- 			UNION ALL -->
<!-- 		SELECT COUNT(UID) FROM SCHEDULERDETAIL -->
<!-- 		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'A' AND SDATE != '0000-00-00' AND EDATE != '0000-00-00' -->
<!-- 			UNION ALL -->
<!-- 		SELECT COUNT(UID) FROM SCHEDULERDETAIL -->
<!-- 		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'B' AND SDATE != '0000-00-00' AND EDATE != '0000-00-00' -->
<!-- 			UNION ALL -->
<!-- 		SELECT COUNT(UID) FROM SCHEDULERDETAIL -->
<!-- 		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND CATEGORY = 'C' AND SDATE != '0000-00-00' AND EDATE != '0000-00-00' -->
	</select>
	
	<select id="getSeriesList" resultType="shipInfoBean">
		SELECT SHIPNUM, TITLE, SHIPTYPE FROM SHIPINFO
		WHERE SHIPNUM IN (SELECT DISTINCT MAINHULLNUM FROM SHIPINFO)
	</select>
	
	<select id="searchTrial" parameterType="paramBean" resultType="schedulerInfoBean">
		SELECT S.UID, S.HULLNUM, S.SHIPTYPE, S.DESCRIPTION, S.SDATE, S.EDATE
		FROM (
			SELECT SI.UID, SI.HULLNUM, SH.MAINHULLNUM, SH.SEQNO, SI.SHIPTYPE, SI.DESCRIPTION, SI.SDATE, SI.EDATE
			FROM SCHEDULERINFO SI
				LEFT OUTER JOIN SCHETRIALINFO STI ON (SI.UID = STI.SCHEDULERINFOUID)
				LEFT OUTER JOIN SHIPINFO SH ON (SI.HULLNUM = SH.SHIPNUM)
			WHERE STI.TRIALSTATUS = 'ARRIVE'
			<if test="hullNum != null and hullNum != 'ALL'">
				AND SI.HULLNUM IN (SELECT SHIPNUM FROM SHIPINFO WHERE MAINHULLNUM = #{hullNum})
			</if>
			<if test="search != null and search.length() > 0">
				AND (
					LOWER(SI.HULLNUM) LIKE CONCAT('%', LOWER(#{search}), '%')
					OR LOWER(SI.DESCRIPTION) LIKE CONCAT('%', LOWER(#{search}), '%')
				)
			</if>
			ORDER BY SH.MAINHULLNUM, SH.SEQNO, SI.HULLNUM, SDATE, EDATE
		) S
	</select>
	
	<delete id="deleteTrialInfo" parameterType="int">
		DELETE FROM SCHETRIALINFO
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</delete>
	
	<insert id="insertTrialInfo" parameterType="scheTrialInfoBean">
		INSERT INTO SCHETRIALINFO (SCHEDULERINFOUID, TRIAL1SCHEDULERINFOUID, TRIAL2SCHEDULERINFOUID 
			<if test="itpTotalRemain != null">, ITPTOTALREMAIN</if>
			<if test="itpTotalBase != null">, ITPTOTALBASE</if>
			<if test="itpTrialRemain != null">, ITPTRIALREMAIN</if>
			<if test="itpTrialBase != null">, ITPTRIALBASE</if>
			<if test="itpOutfittingRemain != null">, ITPOUTFITTINGREMAIN</if>
			<if test="itpOutfittingBase != null">, ITPOUTFITTINGBASE</if>
			<if test="punchTotal != null">, PUNCHTOTAL</if>
			<if test="punchTrial != null">, PUNCHTRIAL</if>
			<if test="punchOutfitting != null">, PUNCHOUTFITTING</if>
			<if test="fuelHfoScheduler != null">, FUELHFOSCHEDULER</if>
			<if test="fuelMgoScheduler != null">, FUELMGOSCHEDULER</if>
			<if test="fuelMdoScheduler != null">, FUELMDOSCHEDULER</if>
			<if test="fuelLngScheduler != null">, FUELLNGSCHEDULER</if>
			<if test="draftFwdScheduler != null">, DRAFTFWDSCHEDULER</if>
			<if test="draftMidScheduler != null">, DRAFTMIDSCHEDULER</if>
			<if test="draftAftScheduler != null">, DRAFTAFTSCHEDULER</if>
			, CREWREMARK, REMARK, TRIALSTATUS, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}, #{trial1SchedulerInfoUid}, #{trial2SchedulerInfoUid} 
			<if test="itpTotalRemain != null">, #{itpTotalRemain}</if>
			<if test="itpTotalBase != null">, #{itpTotalBase}</if>
			<if test="itpTrialRemain != null">, #{itpTrialRemain}</if>
			<if test="itpTrialBase != null">, #{itpTrialBase}</if>
			<if test="itpOutfittingRemain != null">, #{itpOutfittingRemain}</if>
			<if test="itpOutfittingBase != null">, #{itpOutfittingBase}</if>
			<if test="punchTotal != null">, #{punchTotal}</if>
			<if test="punchTrial != null">, #{punchTrial}</if>
			<if test="punchOutfitting != null">, #{punchOutfitting}</if>
			<if test="fuelHfoScheduler != null">, #{fuelHfoScheduler}</if>
			<if test="fuelMgoScheduler != null">, #{fuelMgoScheduler}</if>
			<if test="fuelMdoScheduler != null">, #{fuelMdoScheduler}</if>
			<if test="fuelLngScheduler != null">, #{fuelLngScheduler}</if>
			<if test="draftFwdScheduler != null">, #{draftFwdScheduler}</if>
			<if test="draftMidScheduler != null">, #{draftMidScheduler}</if>
			<if test="draftAftScheduler != null">, #{draftAftScheduler}</if>
			, #{crewRemark}, #{remark}, 'DEPART', SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
	</insert>
	
	<select id="getScheduleDateTime" parameterType="int" resultType="scheduleBean">
		SELECT DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i') AS STARTDATE, DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i') AS ENDDATE, 
			DATE_FORMAT(S.STARTDATE, '%e %b') AS STARTDAY, DATE_FORMAT(S.ENDDATE, '%e %b') AS ENDDAY, 
			TIMESTAMPDIFF(HOUR, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEHOUR,
			TIMESTAMPDIFF(DAY, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEDAY
		FROM (
			SELECT MIN(SI.STARTDATE) AS STARTDATE, MAX(SI.ENDDATE) AS ENDDATE
			FROM (
				SELECT SEQ, CONCAT(SDATE, ' ', STIME) AS STARTDATE, CONCAT(EDATE, ' ', ETIME) AS ENDDATE
				FROM SCHEDULERDETAIL
				WHERE SCHEDINFOUID = #{uid} AND SDATE != '0000-00-00' AND EDATE != '0000-00-00'
			) SI
		) S
	</select>
	
	<select id="getTotalPlanTime" parameterType="int" resultType="int">
		SELECT IFNULL(FLOOR(SUM(TIMESTAMPDIFF(MINUTE, CONCAT(SDATE, ' ', STIME), CONCAT(EDATE, ' ', ETIME))) / 60), 0)
		FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{uid} AND SDATE != '0000-00-00' AND EDATE != '0000-00-00'
	</select>
	
	<select id="getTotalTrialTime" parameterType="int" resultType="int">
		SELECT IFNULL(FLOOR(SUM(TIMESTAMPDIFF(MINUTE, CONCAT(PERFORMANCESDATE, ' ', PERFORMANCESTIME), CONCAT(PERFORMANCEEDATE, ' ', PERFORMANCEETIME))) / 60), 0)
		FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{uid} AND PERFORMANCESDATE IS NOT NULL AND PERFORMANCEEDATE IS NOT NULL
	</select>
	
	<select id="getTrialFuel" parameterType="int" resultType="scheReportCompBean">
		SELECT FUELHFO, FUELMGO, FUELMDO, FUELLNG 
		FROM SCHEREPORTCOMP
		WHERE SCHEDULERINFOUID = #{uid}
	</select>
	
	<insert id="insertReportDeparture" parameterType="scheReportDepartureBean">
		INSERT INTO SCHEREPORTDEPARTURE (SCHEDULERINFOUID, TRIAL1SCHEDULERINFOUID, TRIAL2SCHEDULERINFOUID 
			<if test="itpTotalRemain != null">, ITPTOTALREMAIN</if>
			<if test="itpTotalBase != null">, ITPTOTALBASE</if>
			<if test="itpTrialRemain != null">, ITPTRIALREMAIN</if>
			<if test="itpTrialBase != null">, ITPTRIALBASE</if>
			<if test="itpOutfittingRemain != null">, ITPOUTFITTINGREMAIN</if>
			<if test="itpOutfittingBase != null">, ITPOUTFITTINGBASE</if>
			<if test="punchTotal != null">, PUNCHTOTAL</if>
			<if test="punchTrial != null">, PUNCHTRIAL</if>
			<if test="punchOutfitting != null">, PUNCHOUTFITTING</if>
			<if test="fuelHfo != null">, FUELHFO</if>
			<if test="fuelMgo != null">, FUELMGO</if>
			<if test="fuelMdo != null">, FUELMDO</if>
			<if test="fuelLng != null">, FUELLNG</if>
			<if test="draftFwd != null">, DRAFTFWD</if>
			<if test="draftMid != null">, DRAFTMID</if>
			<if test="draftAft != null">, DRAFTAFT</if>
			, CREWNAME1, CREWNAME2, CREWNAME3, CREWNAME4, CREWNAME5, CREWNAME6, CREWNAME7
			, CREWPHONE1, CREWPHONE2, CREWPHONE3, CREWPHONE4, CREWPHONE5, CREWPHONE6, CREWPHONE7
			, CREWCNTTOTAL, CREWCNT1, CREWCNT2, CREWCNT3, CREWCNT4, CREWCNT5, CREWCNT6, CREWCNT7, CREWCNT8, CREWCNT9
			, SEATRIALTEST, HULL, MACHINERY, ELECTRIC
			, REMARK, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}, #{trial1SchedulerInfoUid}, #{trial2SchedulerInfoUid} 
			<if test="itpTotalRemain != null">, #{itpTotalRemain}</if>
			<if test="itpTotalBase != null">, #{itpTotalBase}</if>
			<if test="itpTrialRemain != null">, #{itpTrialRemain}</if>
			<if test="itpTrialBase != null">, #{itpTrialBase}</if>
			<if test="itpOutfittingRemain != null">, #{itpOutfittingRemain}</if>
			<if test="itpOutfittingBase != null">, #{itpOutfittingBase}</if>
			<if test="punchTotal != null">, #{punchTotal}</if>
			<if test="punchTrial != null">, #{punchTrial}</if>
			<if test="punchOutfitting != null">, #{punchOutfitting}</if>
			<if test="fuelHfo != null">, #{fuelHfo}</if>
			<if test="fuelMgo != null">, #{fuelMgo}</if>
			<if test="fuelMdo != null">, #{fuelMdo}</if>
			<if test="fuelLng != null">, #{fuelLng}</if>
			<if test="draftFwd != null">, #{draftFwd}</if>
			<if test="draftMid != null">, #{draftMid}</if>
			<if test="draftAft != null">, #{draftAft}</if>
			, #{crewName1}, #{crewName2}, #{crewName3}, #{crewName4}, #{crewName5}, #{crewName6}, #{crewName7}
			, #{crewPhone1}, #{crewPhone2}, #{crewPhone3}, #{crewPhone4}, #{crewPhone5}, #{crewPhone6}, #{crewPhone7}
			, #{crewCntTotal}, #{crewCnt1}, #{crewCnt2}, #{crewCnt3}, #{crewCnt4}, #{crewCnt5}, #{crewCnt6}, #{crewCnt7}, #{crewCnt8}, #{crewCnt9}
			, #{seaTrialTest}, #{hull}, #{machinery}, #{electric}
			, #{remark}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<update id="updateTrialStatus" parameterType="scheTrialInfoBean">
		UPDATE SCHETRIALINFO SET TRIALSTATUS = #{trialStatus}, UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
			<if test="trialStatus == 'ONGO'">, ONGOCHANGEDATE = SYSDATE()</if>
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</update>
	
	<insert id="insertMailLog" parameterType="scheMailLogBean">
		INSERT INTO SCHEMAILLOG (SCHEDULERINFOUID, TOSTEP, TOSTEPUID, KIND, EMAIL, INSERTDATE, INSERTBY)
		VALUES (#{schedulerInfoUid}, #{toStep}, #{toStepUid}, #{kind}, #{email}, SYSDATE(), #{insertBy})
	</insert>
	
	<select id="getDomainInfoList" parameterType="string" resultType="domainInfoBean">
		SELECT VAL, DESCRIPTION FROM DOMAININFO
		WHERE DOMAINUID = (SELECT UID FROM DOMAIN WHERE DOMAIN = #{domain})
	</select>
	
	<select id="getTcNoteList" parameterType="int" resultType="scheTcNoteBean">
		SELECT UID, SCHEDULERDETAILUID, CODEKIND, CODE, STARTDATE, ENDDATE, REMARK, ISREPORT 
		FROM SCHETCNOTE
		WHERE SCHEDULERINFOUID = #{uid}
	</select>
	
	<select id="getTcNoteTcList" parameterType="int" resultType="scheTcNoteTcInfoBean">
		SELECT SCHEDULERDETAILUID 
		FROM SCHETCNOTETCINFO
		WHERE SCHETCNOTEUID = #{uid}
	</select>
	
	<select id="getTcNoteFileList" parameterType="int" resultType="scheTcNoteFileInfoBean">
		SELECT UID, FILENAME, SAVENAME, FILESIZE, FILETYPE 
		FROM SCHETCNOTEFILEINFO
		WHERE SCHETCNOTEUID = #{uid}
	</select>
	
	<insert id="insertTcNote" parameterType="scheTcNoteBean">
		INSERT INTO SCHETCNOTE (SCHEDULERINFOUID, SCHEDULERDETAILUID, CODEKIND, CODE, STARTDATE, ENDDATE, 
			REMARK, ISREPORT, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}, #{schedulerDetailUid}, #{codeKind}, #{code}, #{startDate}, #{endDate}, 
			#{remark}, #{isReport}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<update id="updateTcNote" parameterType="scheTcNoteBean">
		UPDATE SCHETCNOTE SET CODEKIND = #{codeKind}, CODE = #{code}, STARTDATE = #{startDate}, ENDDATE = #{endDate}, 
			 REMARK = #{remark}, ISREPORT = #{isReport}, UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE UID = #{uid}
	</update>
	
	<delete id="deleteTcNoteTcList" parameterType="int">
		DELETE FROM SCHETCNOTETCINFO 
		WHERE SCHETCNOTEUID = #{uid}
	</delete>
	
	<insert id="insertTcNoteTc" parameterType="scheTcNoteTcInfoBean">
		INSERT INTO SCHETCNOTETCINFO (SCHEDULERINFOUID, SCHETCNOTEUID, SCHEDULERDETAILUID, INSERTDATE, INSERTBY)
		VALUES (#{schedulerInfoUid}, #{scheTcNoteUid}, #{schedulerDetailUid}, SYSDATE(), #{userUid})
	</insert>
	
	<delete id="deleteTcNoteFile" parameterType="int">
		DELETE FROM SCHETCNOTEFILEINFO 
		WHERE UID = #{uid}
	</delete>
	
	<delete id="deleteTcNoteFileList" parameterType="int">
		DELETE FROM SCHETCNOTEFILEINFO 
		WHERE SCHETCNOTEUID = #{uid}
	</delete>
	
	<insert id="insertTcNoteFile" parameterType="scheTcNoteFileInfoBean">
		INSERT INTO SCHETCNOTEFILEINFO (SCHEDULERINFOUID, SCHETCNOTEUID, FILENAME, SAVENAME, FILESIZE, FILETYPE, INSERTDATE, INSERTBY)
		VALUES (#{schedulerInfoUid}, #{scheTcNoteUid}, #{fileName}, #{saveName}, #{fileSize}, #{fileType}, SYSDATE(), #{userUid})
	</insert>
	
	<select id="getScheduler" parameterType="int" resultType="schedulerInfoBean">
		SELECT 
			S.UID, S.HULLNUM, S.SHIPTYPE, S.DESCRIPTION, S.DEPARTMENT
			, (SELECT CONCAT(U.FIRSTNAME, ' ', U.LASTNAME) FROM USERINFO U WHERE U.UID = S.OWNER) AS OWNERNAME
			, DATE_FORMAT(S.SDATE, '%Y-%m-%d') as SDATE, DATE_FORMAT(S.EDATE, '%Y-%m-%d') AS EDATE
			, (DATEDIFF(S.EDATE, S.SDATE) + 1)  AS PERIOD, S.STATUS, S.REVNUM, S.SCHEDULERVERSIONINFOUID
			, S.SCHEDTYPE, S.SCHECREWSDATE, S.SCHECREWPERIOD, S.TRIALKEY, SH.WORKFINISH, S.ISOFF
		FROM SCHEDULERINFO S
			LEFT OUTER JOIN SHIPINFO SH ON (S.HULLNUM = SH.SHIPNUM)
		WHERE S.UID = #{uid}
	</select>
	
	<select id="getSchedulerRowDataList" parameterType="scheDetailInfoBean" resultType="scheDetailInfoBean">
		SELECT
			UID, SCHEDINFOUID, CATEGORY , TCNUM , DESCRIPTION , CTYPE , LOADRATE , DTYPE, SEQ, PER, READYTIME, NOTE, CODEDETUID, SAMETCNUM
			, DATE_FORMAT(SDATE, '%Y-%m-%d') as SDATE, DATE_FORMAT(STIME , '%H:%i') as STIME
			, DATE_FORMAT(EDATE, '%Y-%m-%d') as EDATE, DATE_FORMAT(ETIME , '%H:%i') as ETIME
			, DATE_FORMAT(PERFORMANCESDATE, '%Y-%m-%d') as PERFORMANCESDATE, DATE_FORMAT(PERFORMANCESTIME , '%H:%i') as PERFORMANCESTIME
			, DATE_FORMAT(PERFORMANCEEDATE, '%Y-%m-%d') as PERFORMANCEEDATE, DATE_FORMAT(PERFORMANCEETIME , '%H:%i') as PERFORMANCEETIME
			, 'R' as FLAG
			, CODEDETTCNUM
			, CODEDETDESC
		FROM SCHEDULERDETAIL S
		WHERE SCHEDINFOUID = #{uid}
		<if test="tcnum != null and tcnum.length() > 0">
			AND LOWER(S.TCNUM) LIKE CONCAT('%', LOWER(#{tcnum}), '%')
		</if>
		<if test="description != null and description.length() > 0">
			AND LOWER(S.DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
		</if>
		<if test="ctype != null and ctype != 'ALL'">
			AND S.CTYPE = #{ctype}
		</if>
		<if test="dtype != null and dtype != 'ALL'">
			AND S.DTYPE = #{dtype}
		</if>
		<if test="sdate != null and sdate.length() > 0">
			AND DATE_FORMAT(S.SDATE, '%Y-%m-%d') <![CDATA[ = ]]> #{sdate}
		</if>
		<if test="edate != null and edate.length() > 0">
			AND DATE_FORMAT(S.EDATE, '%Y-%m-%d') <![CDATA[ = ]]> #{edate}
		</if>
		<choose>
			<when test="sort != null and sort == 'category'">
				ORDER BY S.CATEGORY 
			</when>
			<when test="sort != null and sort == 'tcnum'">
				ORDER BY S.TCNUM 
			</when>
			<when test="sort != null and sort == 'desc'">
				ORDER BY S.DESCRIPTION 
			</when>
			
			<when test="sort != null and sort == 'ctype'">
				ORDER BY S.CTYPE 
			</when>
			<when test="sort != null and sort == 'loadrate'">
				ORDER BY S.LOADRATE 
			</when>
			<when test="sort != null and sort == 'dtype'">
				ORDER BY S.DTYPE 
			</when>
			<when test="sort != null and sort == 'sdate'">
				ORDER BY S.SDATE 
			</when>
			<when test="sort != null and sort == 'stime'">
				ORDER BY S.STIME 
			</when>
			
			<when test="sort != null and sort == 'edate'">
				ORDER BY S.EDATE 
			</when>
			<when test="sort != null and sort == 'etime'">
				ORDER BY S.ETIME 
			</when>
			<when test="sort != null and sort == 'seq'">
				ORDER BY S.SEQ 
			</when>
			<when test="sort != null and sort == 'per'">
				ORDER BY S.PER 
			</when>
			<when test="search2 != null and search2 == 'chart'">
				ORDER BY S.SEQ
			</when>
			<otherwise>
				ORDER BY S.SEQ 
			</otherwise>
		</choose>
		<choose>
			<when test="order != null and order == 'desc'">
				DESC 
			</when>
			<otherwise>
				ASC 
			</otherwise>
		</choose>
	</select>
	
	<select id="getCrewUidListForDelete" parameterType="scheCrewListBean" resultType="int">
		SELECT UID FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} 
		<if test="uidArr != null and uidArr.length > 0">
			AND UID NOT IN 
			<foreach open="(" close=")" collection="uidArr" item="item" separator="," index="index">
				#{item}
			</foreach>
		</if>
	</select>
	
	<delete id="deleteCrew" parameterType="int">
		DELETE FROM SCHECREW
		WHERE UID = #{scheCrewUid}
	</delete>
	
	<update id="updateCrewInOut" parameterType="scheCrewInOutBean">
		UPDATE SCHECREWINOUT SET PERFORMANCEINOUT = #{performanceInOut}, UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE UID = #{uid}
	</update>
	
	<select id="getTrialInfoForResult" parameterType="int" resultType="scheTrialInfoBean">
		SELECT STI.TRIAL1SCHEDULERINFOUID, SI1.HULLNUM AS TRIAL1HULLNUM, SI1.SHIPTYPE AS TRIAL1SHIPTYPE,
			STI.TRIAL2SCHEDULERINFOUID, SI2.HULLNUM AS TRIAL2HULLNUM, SI2.SHIPTYPE AS TRIAL2SHIPTYPE,
			STI.FUELHFOSCHEDULER, STI.FUELMGOSCHEDULER, STI.FUELMDOSCHEDULER, STI.FUELLNGSCHEDULER, 
			STI.FUELHFOPERFORMANCE, STI.FUELMGOPERFORMANCE, STI.FUELMDOPERFORMANCE, STI.FUELLNGPERFORMANCE, 
			STI.FUELHFOTEMP, STI.FUELMGOTEMP, STI.FUELMDOTEMP, STI.FUELLNGTEMP, 
			STI.FUELHFOUP, STI.FUELMGOUP, STI.FUELMDOUP, STI.FUELLNGUP, 
			STI.FUELHFODOWN, STI.FUELMGODOWN, STI.FUELMDODOWN, STI.FUELLNGDOWN, 
			STI.DRAFTFWDSCHEDULER, STI.DRAFTMIDSCHEDULER, STI.DRAFTAFTSCHEDULER, 
			STI.DRAFTFWDPERFORMANCE, STI.DRAFTMIDPERFORMANCE, STI.DRAFTAFTPERFORMANCE, 
			STI.DRAFTFWDTEMP, STI.DRAFTMIDTEMP, STI.DRAFTAFTTEMP, 
			STI.DRAFTFWDUP, STI.DRAFTMIDUP, STI.DRAFTAFTUP, 
			STI.DRAFTFWDDOWN, STI.DRAFTMIDDOWN, STI.DRAFTAFTDOWN, 
			STI.CREWREMARK, STI.REMARK,
			STI.CONTRACTSPEED, STI.MEASURESPEED, STI.COMPREMARK, STI.NOISEVIBRATION
		FROM SCHETRIALINFO STI
			LEFT OUTER JOIN SCHEDULERINFO SI1 ON (STI.TRIAL1SCHEDULERINFOUID = SI1.UID)
			LEFT OUTER JOIN SCHEDULERINFO SI2 ON (STI.TRIAL2SCHEDULERINFOUID = SI2.UID)
		WHERE STI.SCHEDULERINFOUID = #{schedulerInfoUid} 
	</select>
	
	<update id="updateTrialInfo" parameterType="scheTrialInfoBean">
		UPDATE SCHETRIALINFO SET 
			CREWREMARK = #{crewRemark}, REMARK = #{remark}, 
			CONTRACTSPEED = #{contractSpeed}, MEASURESPEED = #{measureSpeed}, COMPREMARK = #{compRemark}, NOISEVIBRATION = #{noiseVibration},
			UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
			<if test="fuelHfoTemp != null">, FUELHFOTEMP = #{fuelHfoTemp}</if>
			<if test="fuelMgoTemp != null">, FUELMGOTEMP = #{fuelMgoTemp}</if>
			<if test="fuelMdoTemp != null">, FUELMDOTEMP = #{fuelMdoTemp}</if>
			<if test="fuelLngTemp != null">, FUELLNGTEMP = #{fuelLngTemp}</if>
			<if test="draftFwdTemp != null">, DRAFTFWDTEMP = #{draftFwdTemp}</if>
			<if test="draftMidTemp != null">, DRAFTMIDTEMP = #{draftMidTemp}</if>
			<if test="draftAftTemp != null">, DRAFTAFTTEMP = #{draftAftTemp}</if>
			<if test="fuelHfoUp != null">, FUELHFOUP = #{fuelHfoUp}</if>
			<if test="fuelMgoUp != null">, FUELMGOUP = #{fuelMgoUp}</if>
			<if test="fuelMdoUp != null">, FUELMDOUP = #{fuelMdoUp}</if>
			<if test="fuelLngUp != null">, FUELLNGUP = #{fuelLngUp}</if>
<!-- 			<if test="draftFwdUp != null">, DRAFTFWDUP = #{draftFwdUp}</if> -->
<!-- 			<if test="draftMidUp != null">, DRAFTMIDUP = #{draftMidUp}</if> -->
<!-- 			<if test="draftAftUp != null">, DRAFTAFTUP = #{draftAftUp}</if> -->
			<if test="fuelHfoDown != null">, FUELHFODOWN = #{fuelHfoDown}</if>
			<if test="fuelMgoDown != null">, FUELMGODOWN = #{fuelMgoDown}</if>
			<if test="fuelMdoDown != null">, FUELMDODOWN = #{fuelMdoDown}</if>
			<if test="fuelLngDown != null">, FUELLNGDOWN = #{fuelLngDown}</if>
<!-- 			<if test="draftFwdDown != null">, DRAFTFWDDOWN = #{draftFwdDown}</if> -->
<!-- 			<if test="draftMidDown != null">, DRAFTMIDDOWN = #{draftMidDown}</if> -->
<!-- 			<if test="draftAftDown != null">, DRAFTAFTDOWN = #{draftAftDown}</if> -->
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</update>
	
	<select id="getExistDailyReport" parameterType="int" resultType="int">
		SELECT UID
		FROM SCHEREPORTDAILY
		WHERE SCHEDULERINFOUID = #{uid} AND DATE_FORMAT(INSERTDATE, '%Y-%m-%d') = DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
	</select>
	
	<select id="getLastDailyReport" parameterType="int" resultType="scheReportDailyBean">
		SELECT CREWCNTTOTAL, CREWCNT1, CREWCNT2, CREWCNT3, CREWCNT4, CREWCNT5, CREWCNT6, CREWCNT7, CREWCNT8, CREWCNT9,
			FUELHFO, FUELMGO, FUELMDO, FUELLNG, DRAFTFWD, DRAFTMID, DRAFTAFT 
		FROM SCHEREPORTDAILY
		WHERE SCHEDULERINFOUID = #{uid}
		ORDER BY INSERTDATE DESC
		LIMIT 1
	</select>
	
	<select id="getCrewListForDaily" parameterType="int" resultType="scheCrewBean">
		SELECT UID, KIND, WORKTYPE1, WORKTYPE2, MAINSUB
		FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</select>

	<select id="getCrewInOutListForDaily" parameterType="int" resultType="scheCrewInOutBean">
		SELECT SCHEDULERINOUT, PERFORMANCEINOUT 
		FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{scheCrewUid} AND DATE_FORMAT(INOUTDATE, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_FORMAT(SYSDATE(), '%Y-%m-%d')
			AND (SCHEDULERINOUT = 'B' OR PERFORMANCEINOUT = 'B' OR SCHEDULERINOUT = 'U' OR PERFORMANCEINOUT = 'U')
	</select>
	
	<insert id="insertReportDaily" parameterType="scheReportDailyBean">
		INSERT INTO SCHEREPORTDAILY (SCHEDULERINFOUID
			<if test="fuelHfo != null">, FUELHFO</if>
			<if test="fuelMgo != null">, FUELMGO</if>
			<if test="fuelMdo != null">, FUELMDO</if>
			<if test="fuelLng != null">, FUELLNG</if>
			<if test="draftFwd != null">, DRAFTFWD</if>
			<if test="draftMid != null">, DRAFTMID</if>
			<if test="draftAft != null">, DRAFTAFT</if>
			<if test="fuelHfoPrev != null">, FUELHFOPREV</if>
			<if test="fuelMgoPrev != null">, FUELMGOPREV</if>
			<if test="fuelMdoPrev != null">, FUELMDOPREV</if>
			<if test="fuelLngPrev != null">, FUELLNGPREV</if>
			<if test="draftFwdPrev != null">, DRAFTFWDPREV</if>
			<if test="draftMidPrev != null">, DRAFTMIDPREV</if>
			<if test="draftAftPrev != null">, DRAFTAFTPREV</if>
			<if test="fuelHfoUp != null">, FUELHFOUP</if>
			<if test="fuelMgoUp != null">, FUELMGOUP</if>
			<if test="fuelMdoUp != null">, FUELMDOUP</if>
			<if test="fuelLngUp != null">, FUELLNGUP</if>
			<if test="fuelHfoDown != null">, FUELHFODOWN</if>
			<if test="fuelMgoDown != null">, FUELMGODOWN</if>
			<if test="fuelMdoDown != null">, FUELMDODOWN</if>
			<if test="fuelLngDown != null">, FUELLNGDOWN</if>
			, CREWNAME1, CREWNAME2, CREWPHONE1, CREWPHONE2 
			, CREWCNTTOTAL, CREWCNT1, CREWCNT2, CREWCNT3, CREWCNT4, CREWCNT5, CREWCNT6, CREWCNT7, CREWCNT8, CREWCNT9
			, CREWCNTTOTALCHANGE, CREWCNT1CHANGE, CREWCNT2CHANGE, CREWCNT3CHANGE, CREWCNT4CHANGE, CREWCNT5CHANGE, CREWCNT6CHANGE, CREWCNT7CHANGE, CREWCNT8CHANGE, CREWCNT9CHANGE
			, SEATRIALTEST, HULL, MACHINERY, ELECTRIC
			, STARTDATE, STARTTIME, ENDDATE, ENDTIME, PREDSTARTDATE, PREDSTARTTIME, PREDENDDATE, PREDENDTIME
			, REMARK, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}
			<if test="fuelHfo != null">, #{fuelHfo}</if>
			<if test="fuelMgo != null">, #{fuelMgo}</if>
			<if test="fuelMdo != null">, #{fuelMdo}</if>
			<if test="fuelLng != null">, #{fuelLng}</if>
			<if test="draftFwd != null">, #{draftFwd}</if>
			<if test="draftMid != null">, #{draftMid}</if>
			<if test="draftAft != null">, #{draftAft}</if>
			<if test="fuelHfoPrev != null">, #{fuelHfoPrev}</if>
			<if test="fuelMgoPrev != null">, #{fuelMgoPrev}</if>
			<if test="fuelMdoPrev != null">, #{fuelMdoPrev}</if>
			<if test="fuelLngPrev != null">, #{fuelLngPrev}</if>
			<if test="draftFwdPrev != null">, #{draftFwdPrev}</if>
			<if test="draftMidPrev != null">, #{draftMidPrev}</if>
			<if test="draftAftPrev != null">, #{draftAftPrev}</if>
			<if test="fuelHfoUp != null">, #{fuelHfoUp}</if>
			<if test="fuelMgoUp != null">, #{fuelMgoUp}</if>
			<if test="fuelMdoUp != null">, #{fuelMdoUp}</if>
			<if test="fuelLngUp != null">, #{fuelLngUp}</if>
			<if test="fuelHfoDown != null">, #{fuelHfoDown}</if>
			<if test="fuelMgoDown != null">, #{fuelMgoDown}</if>
			<if test="fuelMdoDown != null">, #{fuelMdoDown}</if>
			<if test="fuelLngDown != null">, #{fuelLngDown}</if>
			, #{crewName1}, #{crewName2}, #{crewPhone1}, #{crewPhone2}
			, #{crewCntTotal}, #{crewCnt1}, #{crewCnt2}, #{crewCnt3}, #{crewCnt4}, #{crewCnt5}, #{crewCnt6}, #{crewCnt7}, #{crewCnt8}, #{crewCnt9}
			, #{crewCntTotalChange}, #{crewCnt1Change}, #{crewCnt2Change}, #{crewCnt3Change}, #{crewCnt4Change}, #{crewCnt5Change}, #{crewCnt6Change}, #{crewCnt7Change}, #{crewCnt8Change}, #{crewCnt9Change}
			, #{seaTrialTest}, #{hull}, #{machinery}, #{electric}
			, #{startDate}, #{startTime}, #{endDate}, #{endTime}, #{predStartDate}, #{predStartTime}, #{predEndDate}, #{predEndTime}
			, #{remark}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<update id="updateTrialInfoForDaily" parameterType="scheTrialInfoBean">
		UPDATE SCHETRIALINFO SET 
			FUELHFOPERFORMANCE = #{fuelHfoPerformance}, FUELMGOPERFORMANCE = #{fuelMgoPerformance}, FUELMDOPERFORMANCE = #{fuelMdoPerformance}, FUELLNGPERFORMANCE = #{fuelLngPerformance},
			DRAFTFWDPERFORMANCE = #{draftFwdPerformance}, DRAFTMIDPERFORMANCE = #{draftMidPerformance}, DRAFTAFTPERFORMANCE = #{draftAftPerformance}, 
			FUELHFOTEMP = NULL, FUELMGOTEMP = NULL, FUELMDOTEMP = NULL, FUELLNGTEMP = NULL, 
			DRAFTFWDTEMP = NULL, DRAFTMIDTEMP = NULL, DRAFTAFTTEMP = NULL, 
			FUELHFOUP = NULL, FUELMGOUP = NULL, FUELMDOUP = NULL, FUELLNGUP = NULL, 
			FUELHFODOWN = NULL, FUELMGODOWN = NULL, FUELMDODOWN = NULL, FUELLNGDOWN = NULL,
			UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</update>
	
	<select id="getTcPerformanceDateTimeListForDaily" parameterType="int" resultType="scheDetailInfoBean">
		SELECT UID, PERFORMANCESDATE, PERFORMANCESTIME, PERFORMANCEEDATE, PERFORMANCEETIME 
		FROM SCHEDULERDETAIL
		WHERE SCHEDINFOUID = #{schedulerInfoUid} AND (
				(PERFORMANCESDATE IS NOT NULL AND PERFORMANCESTIME IS NOT NULL) OR (PERFORMANCEEDATE IS NOT NULL AND PERFORMANCEETIME IS NOT NULL)
			)
	</select>
	
	<insert id="insertTcPerformanceDateTimeForDaily" parameterType="scheDetailInfoBean">
		INSERT INTO	SCHEDATETIME (
			SCHEDULERDETAILUID, STARTDATE, STARTTIME, ENDDATE, ENDTIME, 
			KIND, REVDATE, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{uid}, #{performancesdate}, #{performancestime}, #{performanceedate}, #{performanceetime}, 
			'P', SYSDATE(), SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
	</insert>
	
	<select id="getTotalFuelDown" parameterType="int" resultType="scheTrialInfoBean">
		SELECT SUM(IFNULL(FUELHFODOWN, 0)) AS FUELHFODOWN, SUM(IFNULL(FUELMGODOWN, 0)) AS FUELMGODOWN, 
			SUM(IFNULL(FUELMDODOWN, 0)) AS FUELMDODOWN, SUM(IFNULL(FUELLNGDOWN, 0)) AS FUELLNGDOWN
		FROM SCHEREPORTDAILY
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</select>
	
	<select id="getTcNoteListForComp" parameterType="int" resultType="scheTcNoteBean">
		SELECT N.UID, N.CODE, DATE_FORMAT(N.STARTDATE, '%Y-%m-%d %H:%i') AS STARTDATE, DATE_FORMAT(N.ENDDATE, '%Y-%m-%d %H:%i') AS ENDDATE, N.REMARK,
			D.TCNUM, D.DESCRIPTION AS TCDESC
		FROM SCHETCNOTE N
			LEFT OUTER JOIN SCHEDULERDETAIL D ON (N.SCHEDULERDETAILUID = D.UID)
		WHERE N.SCHEDULERINFOUID = #{schedulerInfoUid} AND N.ISREPORT = 'Y'
	</select>
	
	<select id="getTcNoteTcListForComp" parameterType="int" resultType="scheTcNoteTcInfoBean">
		SELECT D.TCNUM, D.DESCRIPTION
		FROM SCHETCNOTETCINFO NI
			LEFT OUTER JOIN SCHEDULERDETAIL D ON (NI.SCHEDULERDETAILUID = D.UID)
		WHERE NI.SCHETCNOTEUID = #{scheTcNoteUid}
	</select>
	
	<select id="getTcNoteFileListForComp" parameterType="int" resultType="scheTcNoteFileInfoBean">
		SELECT UID, FILENAME, FILESIZE, FILETYPE
		FROM SCHETCNOTEFILEINFO
		WHERE SCHETCNOTEUID = #{scheTcNoteUid}
	</select>
	
	<insert id="insertReportComp" parameterType="scheReportCompBean">
		INSERT INTO SCHEREPORTCOMP (SCHEDULERINFOUID, TRIAL1SCHEDULERINFOUID, TRIAL2SCHEDULERINFOUID
			<if test="fuelHfo != null">, FUELHFO</if>
			<if test="fuelMgo != null">, FUELMGO</if>
			<if test="fuelMdo != null">, FUELMDO</if>
			<if test="fuelLng != null">, FUELLNG</if>
			, CREWNAME1, CREWNAME2, CREWPHONE1, CREWPHONE2 
			, CREWCNTTOTAL, CREWCNT1, CREWCNT2, CREWCNT3, CREWCNT4, CREWCNT5, CREWCNT6, CREWCNT7, CREWCNT8, CREWCNT9
			, SEATRIALTEST, HULL, MACHINERY, ELECTRIC
			, STARTDATE, STARTTIME, ENDDATE, ENDTIME, PERFORMANCESTARTDATE, PERFORMANCESTARTTIME, PERFORMANCEENDDATE, PERFORMANCEENDTIME
			, REMARK, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{schedulerInfoUid}, #{trial1SchedulerInfoUid}, #{trial2SchedulerInfoUid}
			<if test="fuelHfo != null">, #{fuelHfo}</if>
			<if test="fuelMgo != null">, #{fuelMgo}</if>
			<if test="fuelMdo != null">, #{fuelMdo}</if>
			<if test="fuelLng != null">, #{fuelLng}</if>
			, #{crewName1}, #{crewName2}, #{crewPhone1}, #{crewPhone2}
			, #{crewCntTotal}, #{crewCnt1}, #{crewCnt2}, #{crewCnt3}, #{crewCnt4}, #{crewCnt5}, #{crewCnt6}, #{crewCnt7}, #{crewCnt8}, #{crewCnt9}
			, #{seaTrialTest}, #{hull}, #{machinery}, #{electric}
			, #{startDate}, #{startTime}, #{endDate}, #{endTime}, #{performanceStartDate}, #{performanceStartTime}, #{performanceEndDate}, #{performanceEndTime}
			, #{remark}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<select id="searchEmail" parameterType="paramBean" resultType="scheMailBean">
		SELECT NAME, COMPANY, DEPARTMENT, RANK, EMAIL
		FROM SCHEMAIL
		<if test="search != null and search.length() > 0">
			WHERE LOWER(NAME) LIKE CONCAT('%', LOWER(#{search}), '%')
				OR LOWER(COMPANY) LIKE CONCAT('%', LOWER(#{search}), '%')
				OR LOWER(DEPARTMENT) LIKE CONCAT('%', LOWER(#{search}), '%')
				OR LOWER(RANK) LIKE CONCAT('%', LOWER(#{search}), '%')
				OR LOWER(EMAIL) LIKE CONCAT('%', LOWER(#{search}), '%')
		</if>
		LIMIT 10
	</select>
	
	<delete id="deleteCrewInoutForRollback" parameterType="int">
		DELETE FROM SCHECREWINOUT
		WHERE SCHECREWUID IN (
			SELECT UID FROM SCHECREW
			WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND ISPLAN = 'N'
		)
	</delete>
	
	<delete id="deleteCrewForRollback" parameterType="int">
		DELETE FROM SCHECREW
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid} AND ISPLAN = 'N'
	</delete>
	
	<update id="resetCrewInoutForRollback" parameterType="paramBean">
		UPDATE SCHECREWINOUT SET 
			PERFORMANCEINOUT = 'N', UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE SCHECREWUID IN (
			SELECT UID FROM SCHECREW
			WHERE SCHEDULERINFOUID = #{uid}
		)
	</update>
	
	<delete id="deleteDateTimeForRollback" parameterType="int">
		DELETE FROM SCHEDATETIME
		WHERE KIND = 'P' AND SCHEDULERDETAILUID IN (
			SELECT UID FROM SCHEDULERDETAIL
			WHERE SCHEDINFOUID = #{schedulerInfoUid}
		)
	</delete>
	
	<delete id="deleteReportDailyForRollback" parameterType="int">
		DELETE FROM SCHEREPORTDAILY
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</delete>
	
	<delete id="deleteReportDepartureForRollback" parameterType="int">
		DELETE FROM SCHEREPORTDEPARTURE
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</delete>
	
	<delete id="deleteMailLogForRollback" parameterType="int">
		DELETE FROM SCHEMAILLOG
		WHERE SCHEDULERINFOUID = #{schedulerInfoUid}
	</delete>
	
	<update id="resetSchedulerDetailForRollback" parameterType="paramBean">
		UPDATE SCHEDULERDETAIL SET 
			PERFORMANCESDATE = NULL, PERFORMANCESTIME = NULL, PERFORMANCEEDATE = NULL, PERFORMANCEETIME = NULL,
			UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE SCHEDINFOUID = #{uid}
	</update>
	
	<update id="resetTrialInfoForRollback" parameterType="paramBean">
		UPDATE SCHETRIALINFO SET 
			FUELHFOPERFORMANCE = NULL, FUELMGOPERFORMANCE = NULL, FUELMDOPERFORMANCE = NULL, FUELLNGPERFORMANCE = NULL,
			DRAFTFWDPERFORMANCE = NULL, DRAFTMIDPERFORMANCE = NULL, DRAFTAFTPERFORMANCE = NULL, 
			FUELHFOTEMP = NULL, FUELMGOTEMP = NULL, FUELMDOTEMP = NULL, FUELLNGTEMP = NULL, 
			DRAFTFWDTEMP = NULL, DRAFTMIDTEMP = NULL, DRAFTAFTTEMP = NULL, 
			FUELHFOUP = NULL, FUELMGOUP = NULL, FUELMDOUP = NULL, FUELLNGUP = NULL, 
			FUELHFODOWN = NULL, FUELMGODOWN = NULL, FUELMDODOWN = NULL, FUELLNGDOWN = NULL,
			TRIALSTATUS = 'DEPART', ONGOCHANGEDATE = NULL, UPDATEDATE = SYSDATE(), UPDATEBY = #{userUid}
		WHERE SCHEDULERINFOUID = #{uid}
	</update>
	
	<select id="isOfflineMode" parameterType="int" resultType="string">
		SELECT ISOFF FROM SCHEDULERINFO WHERE UID = #{uid}
	</select>
	
	<select id="getScheduleTcNumSearchList" parameterType="scheCodeDetailBean" resultType="scheCodeDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, SCHECODEINFOUID , LV1CODE , LV2CODE , LV3CODE 
			, LV4CODE , DISPLAYCODE , DESCRIPTION , DTYPE, CTYPE 
			, LOADRATE, LOADSTR, IFNULL(PER, '') AS PER , IFNULL(READYTIME, '') AS READYTIME 
			, SEQ, SAMETCNUM
		FROM SCHEDULECODEDETAIL D
		WHERE SCHECODEINFOUID IN (
			SELECT UID FROM SCHEDULECODEINFO
			WHERE SHIPTYPE = #{shiptype}
			  AND SCHEDTYPE = #{schedtype}
			<if test="status != null and status.length() > 0">
			   AND STATUS = #{status}
		    </if>
		)
		<if test="displaycode != null and displaycode.length() > 0">
		  AND LOWER(DISPLAYCODE) LIKE CONCAT('%', LOWER(#{displaycode}), '%')
		</if>
		<if test="description != null and description.length() > 0">
		  AND LOWER(D.DESCRIPTION) LIKE CONCAT('%', LOWER(#{description}), '%')
		</if>
		ORDER BY SEQ, LV1CODE, LV2CODE, LV3CODE, LV4CODE
		LIMIT #{start}, #{limit}
	</select>
	
	<select id="getScheduleTcNumSearchListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getScheTcNoteUid" resultType="int" parameterType="int">
		SELECT UID FROM SCHETCNOTE WHERE SCHEDULERDETAILUID = #{detailUid}
	</select>
	
	<select id="getScheTcNoteFileInfoSaveNameList" resultType="string" parameterType="int">
		SELECT SAVENAME FROM SCHETCNOTEFILEINFO WHERE SCHETCNOTEUID = #{noteUid}
	</select>
	
	<delete id="deleteScheTcNote" parameterType="int">
		DELETE FROM SCHETCNOTE
		WHERE UID = #{uid}
	</delete>
	
	<delete id="deleteScheTcNoteTcInfoList" parameterType="int">
		DELETE FROM SCHETCNOTETCINFO
		WHERE SCHETCNOTEUID = #{noteUid}
	</delete>
	
	<delete id="deleteScheTcNoteFileInfoList" parameterType="int">
		DELETE FROM SCHETCNOTEFILEINFO
		WHERE SCHETCNOTEUID = #{noteUid}
	</delete>
	
	<select id="getDomainInfoListByDomainId" parameterType="string" resultType="domainInfoBean">
		SELECT UID, VAL, INVAL, DESCRIPTION  
		FROM DOMAININFO 
		WHERE DOMAINUID IN (SELECT UID FROM DOMAIN D WHERE UPPER(D.DOMAIN) = UPPER(#{domain})) 
		ORDER BY UID
	</select>
	
	<select id="getVesselReqInfoDetListBySchedinfoUid" parameterType="paramBean" resultType="vsslReqInfoDetailBean">
		SELECT SQL_CALC_FOUND_ROWS
			UID, VSSLREQINFOUID, SEQ, REQINFOTITLE, ITEM, UNIT, NAME, RPM, LOADRATE, 'R' AS FLAG
		FROM VSSLREQINFODETAIL
		WHERE VSSLREQINFOUID = (SELECT UID FROM VSSLREQINFO WHERE SCHEDINFOUID = #{uid})
	</select>
	
	<select id="getVesselReqInfoDetListBySchedinfoUidCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getVesselReqInfoBySchedinfoUid" parameterType="paramBean" resultType="vsslReqInfoBean">
		SELECT UID, HULLNUM, SHIPTYPE, DESCRIPTION, STATUS, REGISTERDOWNER, GROSSTONNAGE, DRAWN, CHECKED, MANAGER
		FROM VSSLREQINFO
		WHERE SCHEDINFOUID = #{uid}
	</select>
	
	<select id="getShipCondList" parameterType="paramBean" resultType="shipCondBean">
		SELECT UID, SCHEDINFOUID, COND, SDATE, STIME, EDATE, ETIME 
		FROM SHIPCOND 
		WHERE SCHEDINFOUID = #{uid}
	</select>
	
	<select id="getPerformanceInOutForCrewDay" parameterType="scheCrewInOutBean" resultType="string">
		SELECT PERFORMANCEINOUT FROM SCHECREWINOUT 
		WHERE SCHECREWUID = #{scheCrewUid}      
			AND DATE_FORMAT(INOUTDATE, '%Y-%m-%d') <![CDATA[ <= ]]> DATE_ADD(#{inOutDate}, INTERVAL #{addDay} DAY)
			AND (PERFORMANCEINOUT = 'B' OR PERFORMANCEINOUT = 'U')
		ORDER BY PERFORMANCEINOUT
	</select>
	
	<select id="getDateInfoForCrewDay" parameterType="int" resultType="schedulerInfoBean">
		SELECT DATE_FORMAT(SYSDATE(), '%Y-%m-%d') AS TODAY, SDATE, EDATE FROM SCHEDULERINFO WHERE UID = #{uid}
	</select>
	
	<select id="getFuelDateList" parameterType="int" resultType="scheTrialInfoBean">
		SELECT FUELHFOSCHEDULER, FUELMGOSCHEDULER, FUELLNGSCHEDULER, FUELMDOSCHEDULER, DATE_FORMAT(INSERTDATE, '%Y-%m-%d') AS INSERTDATE FROM SCHETRIALINFO
		WHERE SCHEDULERINFOUID = #{uid}
		UNION ALL
		(SELECT FUELHFO AS FUELHFOSCHEDULER, FUELMGO AS FUELMGOSCHEDULER, FUELLNG AS FUELLNGSCHEDULER, FUELMDO AS FUELMDOSCHEDULER, DATE_FORMAT(INSERTDATE, '%Y-%m-%d') AS INSERTDATE FROM SCHEREPORTDAILY
		WHERE SCHEDULERINFOUID = #{uid}
		ORDER BY INSERTDATE)
		UNION ALL
		SELECT FUELHFO AS FUELHFOSCHEDULER, FUELMGO AS FUELMGOSCHEDULER, FUELLNG AS FUELLNGSCHEDULER, FUELMDO AS FUELMDOSCHEDULER, DATE_FORMAT(INSERTDATE, '%Y-%m-%d') AS INSERTDATE FROM SCHEREPORTCOMP
		WHERE SCHEDULERINFOUID = #{uid}
	</select>
	
	<select id="getTrialCompData" parameterType="int" resultType="scheTrialInfoBean">
		SELECT CONTRACTSPEED, MEASURESPEED, COMPREMARK, NOISEVIBRATION 
		FROM SCHETRIALINFO
		WHERE SCHEDULERINFOUID = #{uid}
	</select>
	
	<select id="getDailyReportTcList" parameterType="int" resultType="scheDetailInfoBean">
		SELECT SD.STATE, SD.TCNUM, SD.DESCRIPTION, 
			DATE_FORMAT(SD.SDATE, '%m/%d') AS SDATE, TIME_FORMAT(SD.STIME, '%H:%i') AS STIME, 
			DATE_FORMAT(SD.EDATE, '%m/%d') AS EDATE, TIME_FORMAT(SD.ETIME, '%H:%i') AS ETIME, 
			TIMESTAMPDIFF(MINUTE, DATE_FORMAT(CONCAT(SD.SDATE, ' ', SD.STIME), '%Y-%m-%d %H:%i'), DATE_FORMAT(CONCAT(SD.EDATE, ' ', SD.ETIME), '%Y-%m-%d %H:%i')) AS GAP
		FROM (
			SELECT 'PLAN' AS STATE, TCNUM, DESCRIPTION, SDATE, STIME, EDATE, ETIME 
			FROM SCHEDULERDETAIL
			WHERE SCHEDINFOUID = #{uid} 
				AND PERFORMANCESDATE IS NULL AND PERFORMANCESTIME IS NULL
				AND PERFORMANCEEDATE IS NULL AND PERFORMANCEETIME IS NULL
				AND SDATE IS NOT NULL AND STIME IS NOT NULL
				AND EDATE IS NOT NULL AND ETIME IS NOT NULL
				AND CONCAT(SDATE, ' ', STIME) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL -1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
				AND CONCAT(SDATE, ' ', STIME) <![CDATA[ <= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL 1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
			UNION ALL
			SELECT 'DONE' AS STATE, TCNUM, DESCRIPTION, PERFORMANCESDATE AS SDATE, PERFORMANCESTIME AS STIME, PERFORMANCEEDATE AS EDATE, PERFORMANCEETIME AS ETIME 
			FROM SCHEDULERDETAIL
			WHERE SCHEDINFOUID = #{uid} 
				AND PERFORMANCESDATE IS NOT NULL AND PERFORMANCESTIME IS NOT NULL
				AND PERFORMANCEEDATE IS NOT NULL AND PERFORMANCEETIME IS NOT NULL
				AND CONCAT(PERFORMANCEEDATE, ' ', PERFORMANCEETIME) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL -1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
				AND CONCAT(PERFORMANCEEDATE, ' ', PERFORMANCEETIME) <![CDATA[ <= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL 1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
			UNION ALL
			SELECT 'ONGO' AS STATE, TCNUM, DESCRIPTION, PERFORMANCESDATE AS SDATE, PERFORMANCESTIME AS STIME, EDATE, ETIME 
			FROM SCHEDULERDETAIL
			WHERE SCHEDINFOUID = #{uid} 
				AND PERFORMANCESDATE IS NOT NULL AND PERFORMANCESTIME IS NOT NULL
				AND PERFORMANCEEDATE IS NULL AND PERFORMANCEETIME IS NULL
				AND EDATE IS NOT NULL AND ETIME IS NOT NULL
				AND CONCAT(PERFORMANCESDATE, ' ', PERFORMANCESTIME) <![CDATA[ >= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL -1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
				AND CONCAT(PERFORMANCESDATE, ' ', PERFORMANCESTIME) <![CDATA[ <= ]]> CONCAT(DATE_FORMAT(DATE_ADD(SYSDATE(), INTERVAL 1 DAY), '%Y-%m-%d'), ' ', '07:00:00')
		) SD
		ORDER BY SD.SDATE, SD.STIME
	</select>
	
	<select id="mailing" resultType="scheMailBean">
		SELECT NAME, COMPANY, DEPARTMENT, RANK, EMAIL
		FROM SCHEMAIL
	</select>
	
	<delete id="deleteMailing">
		DELETE FROM SCHEMAIL
	</delete>
	
	<insert id="insertMailing" parameterType="scheMailBean">
		INSERT INTO SCHEMAIL (NAME, COMPANY, DEPARTMENT, RANK, EMAIL, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY)
		VALUES (#{name}, #{company}, #{department}, #{rank}, #{email}, SYSDATE(), #{userUid}, SYSDATE(), #{userUid})
	</insert>
	
	<select id="getLastMailList" parameterType="int" resultType="scheMailBean">
		SELECT SL.EMAIL, (SELECT S.NAME FROM SCHEMAIL S WHERE S.EMAIL = SL.EMAIL LIMIT 1) AS NAME
		FROM SCHEMAILLOG SL
		WHERE SL.TOSTEP = 'LAST' AND SL.SCHEDULERINFOUID = #{uid}
	</select>
	
	<select id="getMailList" resultType="scheMailBean">
		SELECT EMAIL, NAME
		FROM SCHEMAIL
	</select>
	
	<delete id="deleteLastMailList" parameterType="int">
		DELETE FROM SCHEMAILLOG 
		WHERE TOSTEP = 'LAST' AND SCHEDULERINFOUID = #{uid}
	</delete>
	
	<delete id="deleteCrewInoutPerformanceList" parameterType="int">
		DELETE FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{scheCrewUid} AND SCHEDULERINOUT = 'N'
	</delete>
	
	<select id="getScheduleDateTimeDeparture" parameterType="int" resultType="scheduleBean">
		SELECT DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i') AS STARTDATE, DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i') AS ENDDATE, 
			TIMESTAMPDIFF(HOUR, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEHOUR,
			TIMESTAMPDIFF(DAY, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEDAY
		FROM (
			SELECT MIN(SI.STARTDATE) AS STARTDATE, MAX(SI.ENDDATE) AS ENDDATE
			FROM (
				SELECT CONCAT(SDATE, ' ', STIME) AS STARTDATE, CONCAT(EDATE, ' ', ETIME) AS ENDDATE
				FROM REVSCHEDULERDETAIL
				WHERE SCHEDINFOUID = #{uid} AND REVKIND = 'DEPART' AND SDATE != '0000-00-00' AND EDATE != '0000-00-00'
			) SI
		) S
	</select>
	
	<select id="getScheduleDateTimePlan" parameterType="int" resultType="scheduleBean">
		SELECT DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i') AS STARTDATE, DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i') AS ENDDATE, 
			TIMESTAMPDIFF(HOUR, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEHOUR,
			TIMESTAMPDIFF(DAY, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEDAY
		FROM (
			SELECT MIN(SI.STARTDATE) AS STARTDATE, MAX(SI.ENDDATE) AS ENDDATE
			FROM (
				SELECT CONCAT(SDATE, ' ', STIME) AS STARTDATE, CONCAT(EDATE, ' ', ETIME) AS ENDDATE
				FROM SCHEDULERDETAIL
				WHERE SCHEDINFOUID = #{uid} AND SDATE != '0000-00-00' AND EDATE != '0000-00-00'
			) SI
		) S
	</select>
	
	<select id="getScheduleDateTimePerformance" parameterType="int" resultType="scheduleBean">
		SELECT DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i') AS STARTDATE, DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i') AS ENDDATE, 
			TIMESTAMPDIFF(HOUR, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEHOUR,
			TIMESTAMPDIFF(DAY, DATE_FORMAT(S.STARTDATE, '%Y-%m-%d %H:%i'), DATE_FORMAT(S.ENDDATE, '%Y-%m-%d %H:%i')) AS TIMEDAY
		FROM (
			SELECT MIN(SI.STARTDATE) AS STARTDATE, MAX(SI.ENDDATE) AS ENDDATE
			FROM (
				SELECT CONCAT(PERFORMANCESDATE, ' ', PERFORMANCESTIME) AS STARTDATE, CONCAT(PERFORMANCEEDATE, ' ', PERFORMANCEETIME) AS ENDDATE
				FROM SCHEDULERDETAIL
				WHERE SCHEDINFOUID = #{uid} AND PERFORMANCESDATE IS NOT NULL AND PERFORMANCEEDATE IS NOT NULL
			) SI
		) S
	</select>
	
	<select id="get1LevelCodeList" resultType="scheHierarchyBean">
		SELECT DISPLAYCODE, DESCRIPTION
		FROM SCHEDULEHIERARCHY
		WHERE CODELEVEL = 1
		ORDER BY DISPLAYCODE
	</select>
</mapper>