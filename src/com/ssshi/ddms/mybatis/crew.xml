<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.ssshi.ddms.mybatis.dao.CrewDaoI"> 

	<select id="getShipList" resultType="domainInfoBean">		<!-- UID, trialKey, shipType -->
		SELECT 
		    S.HULLNUM as projNo,        
		    S.UID as val,           
		    S.TRIALKEY as description,        
		    SI.REGOWNER as regOwner,         
		    SI.SHIPTYPE as shipType,          
		    SI.PROJSEQ as projSeq,          
		    S.STATUS
		FROM SCHEDULERINFO S
		INNER JOIN SCHEDULERVERSIONINFO SVI ON (S.SCHEDULERVERSIONINFOUID = SVI.UID AND S.REVNUM = SVI.PLANREVNUM)
		LEFT OUTER JOIN SCHETRIALINFO TI ON (S.UID = TI.SCHEDULERINFOUID)
		LEFT OUTER JOIN SHIPINFO SI ON (S.HULLNUM = SI.SHIPNUM)
		LEFT OUTER JOIN USERINFO UI ON (S.INSERTBY = UI.UID)
		<!-- WHERE S.STATUS = 'ACT' -->
		WHERE S.TRIALKEY <![CDATA[ <> ]]> ''
		ORDER BY S.INSERTDATE desc
		
		<!-- 전체 호선리스트 -->
		<!-- SELECT SHIPNUM AS VAL, SHIPNUM AS DESCRIPTION FROM SHIPINFO WHERE TITLE <![CDATA[ <> ]]> ''; -->
	</select>
	
	<select id="getAnchShipList" resultType="domainInfoBean">
         SELECT
            SI.SHIPNUM AS val, 
            (SELECT DESCRIPTION
               FROM DOMAININFO D
              WHERE DOMAINUID IN (SELECT UID FROM DOMAIN WHERE DOMAIN = 'SHIPTYPE')
                AND D.VAL = SI.SHIPTYPE) AS shipTypeDes,
            SI.PROJSEQ AS projSeq,
            SI.STATUS AS status,
            SI.REGOWNER AS regOwner,
            SI.SHIPNUM AS description,
            0 AS schedulerUid
        FROM SHIPINFO SI         
        WHERE 1=1          
          AND SI.STATUS = 'ACT'
        ORDER BY SI.SHIPNUM ASC
    </select>
	
	<select id="getRegistrationCrewList" parameterType="RegistrationCrewBean" resultType="RegistrationCrewBean">
		SELECT S.UID,  S.TRIALKEY , S.PROJECT, S.KIND, S.COMPANY, S.DEPARTMENT, S.NAME, S.RANK, S.IDNO, S.WORKTYPE1,
			   S.WORKTYPE2, S.WORK, S.MAINSUB, S.FOODSTYLE, S.PERSONNO, S.GENDER, S.PHONE, S.ISPLAN, SD.TERMINAL,
			   SD.NOTEBOOK AS LAPTOP, SD.MODEL_NAME AS MODELNM, SD.SERIAL_NUMBER AS SERIALNO,  SD.FOREIGNER, SD.PASSPORT_NUMBER AS PASSPORTNO, SD.ORDER_STATUS AS ORDERSTATUS, S.ISNONE, S.DELETE_YN
		  FROM SCHECREW S
		  LEFT OUTER JOIN SCHECREWDETAILINFO SD ON S.UID = SD.SCHEDULERINFOUID
		WHERE 1=1
		  AND S.UID IS NOT NULL
		  AND S.TRIALKEY IS NOT NULL
		  <!-- AND S.DELETE_YN IS NOT NULL -->
		  AND S.PROJECT IS NOT NULL
		 <if test="ship != null and ship != 'ALL'" >
			AND S.TRIALKEY <![CDATA[ = ]]> #{ship}
		</if>	
	</select>
	
	<select id="getCrewInOutList" parameterType="ParamBean" resultType="scheCrewInOutBean">
		SELECT UID, INOUTDATE, SCHEDULERINOUT, PERFORMANCEINOUT 
		FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{uid}
		<if test="inDate != null and inDate.length() > 0">
			AND DATE_FORMAT(SI.INOUTDATE, '%Y-%m-%d') <![CDATA[ >= ]]> #{startDate}
		</if>
		<if test="outDate != null and outDate.length() > 0">
			AND DATE_FORMAT(SI.INOUTDATE, '%Y-%m-%d') <![CDATA[ <= ]]> #{endDate}
		</if>	
		<!-- 기간조건을 승선일/하선일에만 적용 -->
		<!-- AND (SCHEDULERINOUT = 'B' OR PERFORMANCEINOUT = 'B' OR SCHEDULERINOUT = 'U' OR PERFORMANCEINOUT = 'U') -->
		ORDER BY INOUTDATE
	</select>
	
	<select id="getRegistrationCrewListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
					
	<insert id="insertRegistrationCrew" parameterType="RegistrationCrewBean">
		INSERT INTO SCHECREW (SCHEDULERINFOUID, TRIALKEY, PROJECT, KIND, COMPANY, DEPARTMENT, NAME, RANK, IDNO, WORKTYPE1, WORKTYPE2, WORK 
			,MAINSUB, FOODSTYLE, PERSONNO, GENDER, PHONE, ISPLAN, ISNONE, INSERTDATE, INSERTBY, UPDATEDATE, UPDATEBY, DELETE_YN)
		VALUES (#{schedulerInfoUid}, #{trialKey}, #{project}, #{kind}, #{company}, #{department}, #{name}, #{rank}, #{idNo}, #{workType1}, #{workType2}, #{work}
			,#{mainSub}, #{foodStyle}, #{personNo}, #{gender}, #{phone}, #{isPlan}, 'N', SYSDATE(), #{userUid}, SYSDATE(), #{userUid}, 'N')
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
  	<insert id="insertCrewDetail" parameterType="RegistrationCrewDetailBean">
		INSERT INTO SCHECREWDETAILINFO (SCHEDULERINFOUID, TERMINAL, NOTEBOOK, MODEL_NAME, SERIAL_NUMBER
			,FOREIGNER, PASSPORT_NUMBER, ORDER_STATUS, ORDER_DATE, ORDER_UID ,REG_DATE)
		VALUES (#{scheCrewUid}, #{terminal}, #{laptop}, #{modelNm}, #{serialNo}
			, #{foreigner}, #{passportNo}, #{orderStatus}, SYSDATE(), #{userUid}, SYSDATE())
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>   

	<delete id="deleteCrewList" parameterType="int">
		DELETE FROM SCHECREW
		WHERE UID = #{crewUid}
	</delete>
	
	<delete id="deleteCrewDetailList" parameterType="int">
		DELETE FROM SCHECREWDETAILINFO
		WHERE SCHEDULERINFOUID = #{crewUid}
	</delete>
	
	<delete id="deleteCrewInoutList" parameterType="int">
		DELETE FROM SCHECREWINOUT
		WHERE SCHECREWUID = #{crewUid}
	</delete>
	
	<update id="updateCrewOrder" parameterType="map">
		UPDATE SCHECREWDETAILINFO SET ORDER_STATUS = 'Y', ORDER_DATE = SYSDATE(), ORDER_UID = #{userId}
		WHERE SCHEDULERINFOUID = #{crewUid}
	</update>
		
	<select id="getAnchorageMealList" parameterType="AnchorageMealRequestBean" resultType="AnchorageMealRequestBean">
		select UID, SCHEDULERINFOUID as schedulerInfoUid, PROJ_NO as projNo, 
			TRIALKEY as trialKey, KIND as kind, DOMESTIC_YN as domesticYn, DEPT_NAME as department,
			MEAL_DATE as mealDate, ORDER_STATUS as orderStatus, ORDER_DATE as orderDate,
			ORDER_UID as orderUid, DEL_YN as deleteYn, COMMENT as comment, REG_DATE as inputDate, REG_USERNAME as inputUid
			from mobile_anchor_meal_info
			where 1=1 
		 <if test="ship != null and ship != 'ALL'" >
			AND PROJ_NO <![CDATA[ = ]]> #{ship}			
		 </if>
	</select>
	
	<select id="getAnchorageMealListCnt" resultType="int">
		SELECT FOUND_ROWS()
	</select>
	
	<select id="getAnchorageMealPlanQtyList" parameterType="int" resultType = "AnchorageMealQtyBean">
		SELECT UID, ANCHOR_MEAL_UID, SCHEDULERINFOUID, TRIALKEY, MEAL_TIME as planMealTime,
		MEAL_GUBUN as planMealGubun, MEAL_DATE as planMealDate, MEAL_PLAN_QTY as planMealQty
		FROM mobile_anchor_meal_plancnt
		WHERE ANCHOR_MEAL_UID = #{anchorMealUid}
	</select>
	
	<select id="getAnchorageMealResultQtyList" parameterType="int" resultType = "AnchorageMealQtyBean">
		SELECT ANCHOR_MEAL_UID,  MEAL_TIME as resultMealTime,
			   MEAL_GUBUN as resultMealGubun, MEAL_DATE as resultMealDate, COUNT(*) as resultMealPlanQty
		  FROM mobile_anchor_meal_userinfo
		 where 1=1
		   and ANCHOR_MEAL_UID = #{anchorMealUid}
		 group by ANCHOR_MEAL_UID, MEAL_TIME, MEAL_GUBUN, MEAL_DATE
	</select>
	
	<delete id="deleteAnchList" parameterType="int">
		DELETE FROM mobile_anchor_meal_info
		WHERE UID = #{anchUid}
	</delete>
	
	<delete id="deleteAnchPlanList" parameterType="int">
		DELETE FROM mobile_anchor_meal_plancnt
		WHERE ANCHOR_MEAL_UID = #{anchUid}
	</delete>
	
	<delete id="deleteAnchResultList" parameterType="int">
		DELETE FROM mobile_anchor_meal_userinfo
		WHERE ANCHOR_MEAL_UID = #{anchUid}
	</delete>
	
	<insert id="insertAnchorageMeal" parameterType="AnchorageMealRequestBean">
		INSERT INTO mobile_anchor_meal_info (PROJ_NO, SCHEDULERINFOUID, TRIALKEY, KIND, DOMESTIC_YN, DEPT_NAME, MEAL_DATE, ORDER_STATUS, 
			ORDER_DATE, ORDER_UID, DEL_YN, COMMENT, REG_DATE, 
			REG_USERNAME,QR_DATE, ANDROID_ID, INSERT_DATE, INSERTBY, REG_DEVICE)
		VALUES (#{projNo}, 0, #{trialKey}, #{kind}, #{domesticYn}, #{department}, NULLIF(#{mealDate}, ''), #{orderStatus},
		     NULLIF(#{orderDate}, ''), NULLIF(#{orderUid}, ''), #{deleteYn}, #{comment}, SYSDATE(),
			 #{userUid}, null, null, SYSDATE(), #{userUid}, null)
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
  	<insert id="insertMealQty" parameterType="AnchorageMealQtyBean">
		INSERT INTO mobile_anchor_meal_plancnt (ANCHOR_MEAL_UID, SCHEDULERINFOUID, TRIALKEY, 
			MEAL_TIME, MEAL_GUBUN,
			MEAL_PLAN_QTY, DEL_YN, REG_DATE, REG_USERNAME, INSERTBY, REG_DEVICE)
		VALUES (#{anchorMealUid}, 0, #{projNo}, #{planMealTime}, #{planMealGubun}, #{planMealQty}
			, 'N', SYSDATE(), #{uuid}, null, null)
		<selectKey resultType="int" keyProperty="uid" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>   
	
	<update id="updateAnchOrder" parameterType="map">
		UPDATE mobile_anchor_meal_info SET ORDER_STATUS = 'Y', ORDER_DATE = SYSDATE(), ORDER_UID = #{userId}
		WHERE UID = #{anchUid}
	</update>
	
</mapper>